{"version":3,"file":"component---src-pages-docs-table-tsx-ed9351186814c643e85c.js","mappings":"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","sources":["webpack://react-components-docs/../node_modules/lorem-ipsum/dist/constants/formats.js","webpack://react-components-docs/../node_modules/lorem-ipsum/dist/constants/lineEndings.js","webpack://react-components-docs/../node_modules/lorem-ipsum/dist/constants/platforms.js","webpack://react-components-docs/../node_modules/lorem-ipsum/dist/constants/words.js","webpack://react-components-docs/../node_modules/lorem-ipsum/dist/index.js","webpack://react-components-docs/../node_modules/lorem-ipsum/dist/lib/LoremIpsum.js","webpack://react-components-docs/../node_modules/lorem-ipsum/dist/lib/generator.js","webpack://react-components-docs/../node_modules/lorem-ipsum/dist/util/capitalize.js","webpack://react-components-docs/../node_modules/lorem-ipsum/dist/util/index.js","webpack://react-components-docs/../node_modules/lorem-ipsum/dist/util/isNode.js","webpack://react-components-docs/../node_modules/lorem-ipsum/dist/util/isReactNative.js","webpack://react-components-docs/../node_modules/lorem-ipsum/dist/util/isWindows.js","webpack://react-components-docs/../node_modules/lorem-ipsum/dist/util/makeArrayOfLength.js","webpack://react-components-docs/../node_modules/lorem-ipsum/dist/util/makeArrayOfStrings.js","webpack://react-components-docs/./src/utils/makeData.tsx","webpack://react-components-docs/./src/utils/helpers.ts","webpack://react-components-docs/./src/pages/docs/table.tsx","webpack://react-components-docs/../lib/src/Button/Button.tsx","webpack://react-components-docs/../lib/src/Pagination/NumberedPagination.tsx","webpack://react-components-docs/../lib/src/Pagination/Page.tsx","webpack://react-components-docs/../lib/src/Pagination/Pagination.tsx","webpack://react-components-docs/../lib/src/Table/TableContextProvider.tsx","webpack://react-components-docs/../lib/src/Table/Table.tsx","webpack://react-components-docs/../lib/src/Table/parts/TableHeaderCell.tsx","webpack://react-components-docs/../lib/src/Table/parts/TableHeader.tsx","webpack://react-components-docs/../lib/src/Table/parts/TableBody.tsx","webpack://react-components-docs/../lib/src/Table/parts/TableCell.tsx","webpack://react-components-docs/../lib/src/Table/parts/TableRow.tsx","webpack://react-components-docs/../lib/src/Table/parts/helperFunctions.ts","webpack://react-components-docs/../lib/src/Table/table-typings.ts","webpack://react-components-docs/../lib/src/Table/Table.tsx?4922"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FORMATS = exports.FORMAT_PLAIN = exports.FORMAT_HTML = void 0;\nvar FORMAT_HTML = \"html\";\nexports.FORMAT_HTML = FORMAT_HTML;\nvar FORMAT_PLAIN = \"plain\";\nexports.FORMAT_PLAIN = FORMAT_PLAIN;\nvar FORMATS = [FORMAT_HTML, FORMAT_PLAIN];\nexports.FORMATS = FORMATS;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LINE_ENDINGS = void 0;\nvar LINE_ENDINGS = {\n  POSIX: \"\\n\",\n  WIN32: \"\\r\\n\"\n};\nexports.LINE_ENDINGS = LINE_ENDINGS;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SUPPORTED_PLATFORMS = void 0;\nvar SUPPORTED_PLATFORMS = {\n  DARWIN: \"darwin\",\n  LINUX: \"linux\",\n  WIN32: \"win32\"\n};\nexports.SUPPORTED_PLATFORMS = SUPPORTED_PLATFORMS;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WORDS = void 0;\nvar WORDS = [\"ad\", \"adipisicing\", \"aliqua\", \"aliquip\", \"amet\", \"anim\", \"aute\", \"cillum\", \"commodo\", \"consectetur\", \"consequat\", \"culpa\", \"cupidatat\", \"deserunt\", \"do\", \"dolor\", \"dolore\", \"duis\", \"ea\", \"eiusmod\", \"elit\", \"enim\", \"esse\", \"est\", \"et\", \"eu\", \"ex\", \"excepteur\", \"exercitation\", \"fugiat\", \"id\", \"in\", \"incididunt\", \"ipsum\", \"irure\", \"labore\", \"laboris\", \"laborum\", \"Lorem\", \"magna\", \"minim\", \"mollit\", \"nisi\", \"non\", \"nostrud\", \"nulla\", \"occaecat\", \"officia\", \"pariatur\", \"proident\", \"qui\", \"quis\", \"reprehenderit\", \"sint\", \"sit\", \"sunt\", \"tempor\", \"ullamco\", \"ut\", \"velit\", \"veniam\", \"voluptate\"];\nexports.WORDS = WORDS;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"LoremIpsum\", {\n  enumerable: true,\n  get: function get() {\n    return _LoremIpsum[\"default\"];\n  }\n});\nexports.loremIpsum = void 0;\n\nvar _words = require(\"./constants/words\");\n\nvar _LoremIpsum = _interopRequireDefault(require(\"./lib/LoremIpsum\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar loremIpsum = function loremIpsum() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$count = _ref.count,\n      count = _ref$count === void 0 ? 1 : _ref$count,\n      _ref$format = _ref.format,\n      format = _ref$format === void 0 ? \"plain\" : _ref$format,\n      _ref$paragraphLowerBo = _ref.paragraphLowerBound,\n      paragraphLowerBound = _ref$paragraphLowerBo === void 0 ? 3 : _ref$paragraphLowerBo,\n      _ref$paragraphUpperBo = _ref.paragraphUpperBound,\n      paragraphUpperBound = _ref$paragraphUpperBo === void 0 ? 7 : _ref$paragraphUpperBo,\n      random = _ref.random,\n      _ref$sentenceLowerBou = _ref.sentenceLowerBound,\n      sentenceLowerBound = _ref$sentenceLowerBou === void 0 ? 5 : _ref$sentenceLowerBou,\n      _ref$sentenceUpperBou = _ref.sentenceUpperBound,\n      sentenceUpperBound = _ref$sentenceUpperBou === void 0 ? 15 : _ref$sentenceUpperBou,\n      _ref$units = _ref.units,\n      units = _ref$units === void 0 ? \"sentences\" : _ref$units,\n      _ref$words = _ref.words,\n      words = _ref$words === void 0 ? _words.WORDS : _ref$words,\n      _ref$suffix = _ref.suffix,\n      suffix = _ref$suffix === void 0 ? \"\" : _ref$suffix;\n\n  var options = {\n    random: random,\n    sentencesPerParagraph: {\n      max: paragraphUpperBound,\n      min: paragraphLowerBound\n    },\n    words: words,\n    wordsPerSentence: {\n      max: sentenceUpperBound,\n      min: sentenceLowerBound\n    }\n  };\n  var lorem = new _LoremIpsum[\"default\"](options, format, suffix);\n\n  switch (units) {\n    case \"paragraphs\":\n    case \"paragraph\":\n      return lorem.generateParagraphs(count);\n\n    case \"sentences\":\n    case \"sentence\":\n      return lorem.generateSentences(count);\n\n    case \"words\":\n    case \"word\":\n      return lorem.generateWords(count);\n\n    default:\n      return \"\";\n  }\n};\n\nexports.loremIpsum = loremIpsum;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _formats = require(\"../constants/formats\");\n\nvar _lineEndings = require(\"../constants/lineEndings\");\n\nvar _generator = _interopRequireDefault(require(\"../lib/generator\"));\n\nvar _util = require(\"../util\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar LoremIpsum = /*#__PURE__*/function () {\n  function LoremIpsum() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _formats.FORMAT_PLAIN;\n    var suffix = arguments.length > 2 ? arguments[2] : undefined;\n\n    _classCallCheck(this, LoremIpsum);\n\n    _defineProperty(this, \"generator\", void 0);\n\n    _defineProperty(this, \"format\", void 0);\n\n    _defineProperty(this, \"suffix\", void 0);\n\n    if (_formats.FORMATS.indexOf(format.toLowerCase()) === -1) {\n      throw new Error(\"\".concat(format, \" is an invalid format. Please use \").concat(_formats.FORMATS.join(\" or \"), \".\"));\n    }\n\n    this.format = format.toLowerCase();\n    this.suffix = suffix;\n    this.generator = new _generator[\"default\"](options);\n  }\n\n  _createClass(LoremIpsum, [{\n    key: \"getLineEnding\",\n    value: function getLineEnding() {\n      if (this.suffix) {\n        return this.suffix;\n      }\n\n      if (!(0, _util.isReactNative)() && (0, _util.isNode)() && (0, _util.isWindows)()) {\n        return _lineEndings.LINE_ENDINGS.WIN32;\n      }\n\n      return _lineEndings.LINE_ENDINGS.POSIX;\n    }\n  }, {\n    key: \"formatString\",\n    value: function formatString(str) {\n      if (this.format === _formats.FORMAT_HTML) {\n        return \"<p>\".concat(str, \"</p>\");\n      }\n\n      return str;\n    }\n  }, {\n    key: \"formatStrings\",\n    value: function formatStrings(strings) {\n      var _this = this;\n\n      return strings.map(function (str) {\n        return _this.formatString(str);\n      });\n    }\n  }, {\n    key: \"generateWords\",\n    value: function generateWords(num) {\n      return this.formatString(this.generator.generateRandomWords(num));\n    }\n  }, {\n    key: \"generateSentences\",\n    value: function generateSentences(num) {\n      return this.formatString(this.generator.generateRandomParagraph(num));\n    }\n  }, {\n    key: \"generateParagraphs\",\n    value: function generateParagraphs(num) {\n      var makeString = this.generator.generateRandomParagraph.bind(this.generator);\n      return this.formatStrings((0, _util.makeArrayOfStrings)(num, makeString)).join(this.getLineEnding());\n    }\n  }]);\n\n  return LoremIpsum;\n}();\n\nvar _default = LoremIpsum;\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _words = require(\"../constants/words\");\n\nvar _util = require(\"../util\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar Generator = /*#__PURE__*/function () {\n  function Generator() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$sentencesPerPara = _ref.sentencesPerParagraph,\n        sentencesPerParagraph = _ref$sentencesPerPara === void 0 ? {\n      max: 7,\n      min: 3\n    } : _ref$sentencesPerPara,\n        _ref$wordsPerSentence = _ref.wordsPerSentence,\n        wordsPerSentence = _ref$wordsPerSentence === void 0 ? {\n      max: 15,\n      min: 5\n    } : _ref$wordsPerSentence,\n        random = _ref.random,\n        seed = _ref.seed,\n        _ref$words = _ref.words,\n        words = _ref$words === void 0 ? _words.WORDS : _ref$words;\n\n    _classCallCheck(this, Generator);\n\n    _defineProperty(this, \"sentencesPerParagraph\", void 0);\n\n    _defineProperty(this, \"wordsPerSentence\", void 0);\n\n    _defineProperty(this, \"random\", void 0);\n\n    _defineProperty(this, \"words\", void 0);\n\n    if (sentencesPerParagraph.min > sentencesPerParagraph.max) {\n      throw new Error(\"Minimum number of sentences per paragraph (\".concat(sentencesPerParagraph.min, \") cannot exceed maximum (\").concat(sentencesPerParagraph.max, \").\"));\n    }\n\n    if (wordsPerSentence.min > wordsPerSentence.max) {\n      throw new Error(\"Minimum number of words per sentence (\".concat(wordsPerSentence.min, \") cannot exceed maximum (\").concat(wordsPerSentence.max, \").\"));\n    }\n\n    this.sentencesPerParagraph = sentencesPerParagraph;\n    this.words = words;\n    this.wordsPerSentence = wordsPerSentence;\n    this.random = random || Math.random;\n  }\n\n  _createClass(Generator, [{\n    key: \"generateRandomInteger\",\n    value: function generateRandomInteger(min, max) {\n      return Math.floor(this.random() * (max - min + 1) + min);\n    }\n  }, {\n    key: \"generateRandomWords\",\n    value: function generateRandomWords(num) {\n      var _this = this;\n\n      var _this$wordsPerSentenc = this.wordsPerSentence,\n          min = _this$wordsPerSentenc.min,\n          max = _this$wordsPerSentenc.max;\n      var length = num || this.generateRandomInteger(min, max);\n      return (0, _util.makeArrayOfLength)(length).reduce(function (accumulator, index) {\n        return \"\".concat(_this.pluckRandomWord(), \" \").concat(accumulator);\n      }, \"\").trim();\n    }\n  }, {\n    key: \"generateRandomSentence\",\n    value: function generateRandomSentence(num) {\n      return \"\".concat((0, _util.capitalize)(this.generateRandomWords(num)), \".\");\n    }\n  }, {\n    key: \"generateRandomParagraph\",\n    value: function generateRandomParagraph(num) {\n      var _this2 = this;\n\n      var _this$sentencesPerPar = this.sentencesPerParagraph,\n          min = _this$sentencesPerPar.min,\n          max = _this$sentencesPerPar.max;\n      var length = num || this.generateRandomInteger(min, max);\n      return (0, _util.makeArrayOfLength)(length).reduce(function (accumulator, index) {\n        return \"\".concat(_this2.generateRandomSentence(), \" \").concat(accumulator);\n      }, \"\").trim();\n    }\n  }, {\n    key: \"pluckRandomWord\",\n    value: function pluckRandomWord() {\n      var min = 0;\n      var max = this.words.length - 1;\n      var index = this.generateRandomInteger(min, max);\n      return this.words[index];\n    }\n  }]);\n\n  return Generator;\n}();\n\nvar _default = Generator;\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n/**\r\n * @param str  A string that may or may not be capitalized.\r\n * @returns    A capitalized string.\r\n */\n\nvar capitalize = function capitalize(str) {\n  var trimmed = str.trim();\n  return trimmed.charAt(0).toUpperCase() + trimmed.slice(1);\n};\n\nvar _default = capitalize;\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"capitalize\", {\n  enumerable: true,\n  get: function get() {\n    return _capitalize[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"isNode\", {\n  enumerable: true,\n  get: function get() {\n    return _isNode[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"isReactNative\", {\n  enumerable: true,\n  get: function get() {\n    return _isReactNative[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"isWindows\", {\n  enumerable: true,\n  get: function get() {\n    return _isWindows[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"makeArrayOfLength\", {\n  enumerable: true,\n  get: function get() {\n    return _makeArrayOfLength[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"makeArrayOfStrings\", {\n  enumerable: true,\n  get: function get() {\n    return _makeArrayOfStrings[\"default\"];\n  }\n});\n\nvar _capitalize = _interopRequireDefault(require(\"./capitalize\"));\n\nvar _isNode = _interopRequireDefault(require(\"./isNode\"));\n\nvar _isReactNative = _interopRequireDefault(require(\"./isReactNative\"));\n\nvar _isWindows = _interopRequireDefault(require(\"./isWindows\"));\n\nvar _makeArrayOfLength = _interopRequireDefault(require(\"./makeArrayOfLength\"));\n\nvar _makeArrayOfStrings = _interopRequireDefault(require(\"./makeArrayOfStrings\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n/**\r\n * @returns  True if the runtime is NodeJS.\r\n */\n\nvar isNode = function isNode() {\n  return typeof module !== \"undefined\" && !!module.exports;\n};\n\nvar _default = isNode;\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n/**\r\n * @returns  True if runtime is ReactNative.\r\n */\n\nvar isReactNative = function isReactNative() {\n  return typeof navigator !== \"undefined\" && navigator.product === \"ReactNative\";\n};\n\nvar _default = isReactNative;\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _platforms = require(\"../constants/platforms\");\n/**\r\n * @returns True if process is windows.\r\n */\n\n\nvar isWindows = function isWindows() {\n  return typeof process !== \"undefined\" && process.platform === _platforms.SUPPORTED_PLATFORMS.WIN32;\n};\n\nvar _default = isWindows;\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n/**\r\n * @param length Length \"x\".\r\n * @returns      An array of indexes of length \"x\".\r\n */\n\nvar makeArrayOfLength = function makeArrayOfLength() {\n  var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return Array.apply(null, Array(length)).map(function (item, index) {\n    return index;\n  });\n};\n\nvar _default = makeArrayOfLength;\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _ = require(\".\");\n/**\r\n * @param length  Length \"x\".\r\n * @returns       An array of strings of length \"x\".\r\n */\n\n\nvar makeArrayOfStrings = function makeArrayOfStrings(length, makeString) {\n  var arr = (0, _.makeArrayOfLength)(length);\n  return arr.map(function () {\n    return makeString();\n  });\n};\n\nvar _default = makeArrayOfStrings;\nexports[\"default\"] = _default;","import React from \"react\";\nimport { loremIpsum } from \"lorem-ipsum\";\n\nfunction newPerson(): object {\n    const age: number = Math.floor(Math.random() * 30);\n    return {\n        firstName: loremIpsum({ units: \"words\", count: 1 }),\n        lastName: loremIpsum({ units: \"words\", count: 1 }),\n        age,\n        status: age % 2 === 0 ? \"single\" : \"in relationship\",\n    };\n}\n\nfunction range(len: number): Array<number> {\n    const arr: Array<number> = [];\n    for (let i = 0; i < len; i++) {\n        arr.push(i);\n    }\n    return arr;\n}\n\nexport default function makeData<T>(lens: Array<number>, useRowActionColumn?: boolean): T {\n    const makeDataLevel: Function = (depth: number = 0): object | Function => {\n        const len: number = lens[depth];\n        return range(len).map((d: number) => {\n            return {\n                ...newPerson(),\n                subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined,\n                rowContentDetail: <p className=\"details\"> {loremIpsum({ units: \"sentences\", count: 2 })} </p>,\n            };\n        });\n    };\n\n    return makeDataLevel();\n}\n","/** check if key selected from options */\n\ntype Control = {\n    [T: string]: any;\n};\n\nexport function checkDynamicFormSelectedKey<T>(key: string, controls: Control): T {\n    return controls.checkboxes?.find((item: string) => item === key);\n}\n","import React from \"react\";\nimport Docs from \"@common/Docs\";\nimport { Table, TableBody, TableCell, TableHeader, TableHeaderCell, TableRow } from \"@sebgroup/react-components/Table\";\nimport { useDynamicForm } from \"@sebgroup/react-components/hooks/useDynamicForm\";\nimport makeData from \"@utils/makeData\";\nimport { Dropdown } from \"@sebgroup/react-components/Dropdown\";\nimport { checkDynamicFormSelectedKey } from \"@utils/helpers\";\nimport { Textbox } from \"@sebgroup/react-components/Textbox\";\nimport { filterArrayByColumns, onRowSelect, paginate, searchTextByColumns, sortArray } from \"@sebgroup/react-components/Table/parts/helperFunctions\";\nimport { SortedColumn } from \"@sebgroup/react-components/Table/TableContextProvider\";\nimport { FilterColumn, GenericTableRow, SortDirection } from \"@sebgroup/react-components/Table/table-typings\";\nimport { NumberedPagination } from \"@sebgroup/react-components/Pagination/NumberedPagination\";\nimport { CodeSnippet } from \"@common/CodeSnippet\";\nimport { Button } from \"@sebgroup/react-components/Button\";\n\nconst importString: string = require(\"!raw-loader!@sebgroup/react-components/Table/Table\");\nconst code: string = `<Table>\n    <TableHeader>\n        <TableRow>\n            <TableHeaderCell>TableHeaderCell1</TableHeaderCell>\n            <TableHeaderCell>TableHeaderCell2</TableHeaderCell>\n        </TableRow>\n    </TableHeader>\n    <TableBody>\n        <TableRow>\n            <TableCell>TableCell1</TableCell>\n            <TableCell>TableCell2</TableCell>\n        </TableRow>\n    </TableBody>\n</Table>`;\n\nconst columns: Array<Column> = [\n    { label: \"First Name\", accessor: \"firstName\" },\n    { label: \"Last Name\", accessor: \"lastName\" },\n    { label: \"Age\", accessor: \"age\" },\n    { label: \"Status\", accessor: \"status\" },\n];\n\ninterface TableDataProps {\n    firstName: string;\n    lastName: string;\n    age: number;\n    status: string;\n    subRows?: Array<TableDataProps>;\n}\n\ninterface Column<T = TableDataProps> {\n    accessor: keyof T;\n    label: string;\n}\n\nconst ascendingLabel: \"ascending\" = `ascending`;\nconst descendingLabel: \"descending\" = `descending`;\n\nconst TablePage: React.FC = (): React.ReactElement<void> => {\n    const [paginationValue, setPaginationValue] = React.useState<number>(0);\n    const [pages, setPages] = React.useState<number>(0);\n    const [pagingSize, setPagingSize] = React.useState<number>(10);\n    const [searchText, setSearchText] = React.useState<string>(\"\");\n    const [selectAllIndicator, setSelectAllIndicator] = React.useState<any>({ checked: false, indeterminate: false });\n    const [dropDownListSelected, setDropdownListSelected] = React.useState<Array<string>>([]);\n    const [filterColumns, setFilterColumns] = React.useState<Array<FilterColumn>>([]);\n    const [sortedColumn, setSortedColumn] = React.useState<SortedColumn>(null);\n\n    const {\n        renderForm: renderControls,\n        state: { controls },\n    } = useDynamicForm([\n        {\n            key: \"controls\",\n            items: [\n                {\n                    label: \"Configurable options\",\n                    key: \"checkboxes\",\n                    controlType: \"Option\",\n                    options: [\n                        { label: \"Enable Sorting\", value: \"enableSorting\", key: \"enableSorting\" },\n                        { label: \"Row Selection\", value: \"enableRowSelection\", key: \"enableRowSelection\" },\n                        { label: \"Enable pagination\", value: \"enablePagination\", key: \"enablePagination\" },\n                        { label: \"Enable sub rows\", value: \"enableSubRows\", key: \"enableSubRows\" },\n                        { label: \"Enable searching\", value: \"enableSearch\", key: \"enableSearch\" },\n                        { label: \"Enable filter\", value: \"enableFilter\", key: \"enableFilter\" },\n                        { label: \"Enable dark theme\", value: \"enableDark\", key: \"enableDark\" },\n                    ],\n                },\n            ],\n        },\n    ]);\n\n    const enableSorting = checkDynamicFormSelectedKey(\"enableSorting\", controls);\n    const enableRowSelection = checkDynamicFormSelectedKey(\"enableRowSelection\", controls);\n    const enablePagination = checkDynamicFormSelectedKey(\"enablePagination\", controls);\n    const enableSubRows = checkDynamicFormSelectedKey(\"enableSubRows\", controls);\n    const enableSearch = checkDynamicFormSelectedKey(\"enableSearch\", controls);\n    const enableFilter = checkDynamicFormSelectedKey(\"enableFilter\", controls);\n    const enableDark = checkDynamicFormSelectedKey(\"enableDark\", controls);\n\n    const defaultData: Array<TableDataProps> = React.useMemo(() => makeData<Array<TableDataProps>>([enablePagination ? 100 : 10, 5]), [enablePagination]);\n    const [data, setData] = React.useState<Array<GenericTableRow<TableDataProps>>>([...defaultData]);\n\n    const statusDropdownList: string[] = [\"single\", \"in relationship\"];\n\n    const onDropdownChange = (value: Array<string>) => {\n        const newFilterColumns: Array<FilterColumn<TableDataProps>> = [...filterColumns];\n        const filterIndex: number = newFilterColumns.findIndex((item: FilterColumn<TableDataProps>) => item.accessor === \"status\");\n        const newFilter: FilterColumn<TableDataProps> = { accessor: \"status\", value };\n        if (filterIndex > -1) {\n            newFilterColumns[filterIndex] = newFilter;\n        } else {\n            newFilterColumns.push(newFilter);\n        }\n        setFilterColumns(newFilterColumns);\n        setDropdownListSelected(value);\n    };\n\n    const handleTextChange = React.useCallback(\n        (e: React.ChangeEvent<HTMLInputElement>) => {\n            setSearchText(e.target.value);\n            setData(searchTextByColumns(defaultData, e.target.value, [\"lastName\"]));\n        },\n        [searchText]\n    );\n\n    const getSortOrder = (column: Column) => {\n        if (!sortedColumn || sortedColumn?.accessor !== column.accessor) {\n            return \"none\";\n        }\n        return sortedColumn?.sortDirection === SortDirection.ASC ? ascendingLabel : descendingLabel;\n    };\n\n    const getSortOrderLabel = (column: Column) => {\n        return sortedColumn?.accessor === column.accessor && sortedColumn?.sortDirection === SortDirection.DESC ? ascendingLabel : descendingLabel;\n    };\n\n    React.useEffect(() => setData(filterArrayByColumns(defaultData, filterColumns)), [filterColumns]);\n    React.useEffect(() => setDropdownListSelected([]), [enableFilter]);\n    React.useEffect(() => setPages(Math.floor(defaultData.length / pagingSize)), [pagingSize, defaultData]);\n    React.useEffect(() => setData(enablePagination ? paginate(defaultData, pagingSize, paginationValue) : defaultData), [paginationValue, pagingSize, defaultData, enablePagination]);\n\n    return (\n        <Docs\n            mainFile={importString}\n            exampleTheme={enableDark ? \"dark\" : null}\n            example={\n                <div className=\"w-100\">\n                    <Table\n                        theme={enableDark ? \"dark\" : \"light\"}\n                        onSort={\n                            enableSorting\n                                ? (newSortedColumn: SortedColumn) => {\n                                      setSortedColumn(newSortedColumn);\n                                      newSortedColumn && setData(sortArray(data, newSortedColumn.accessor as keyof TableDataProps, newSortedColumn.sortDirection));\n                                  }\n                                : null\n                        }\n                        onRowSelect={\n                            enableRowSelection\n                                ? (event: React.ChangeEvent<HTMLInputElement>, rowUniqueKey: string) => {\n                                      const { data: newData, isAllSelected, isIndeterminate } = onRowSelect(event, data, \"firstName\", rowUniqueKey);\n                                      setSelectAllIndicator({ checked: isAllSelected, indeterminate: isIndeterminate });\n                                      setData(newData);\n                                  }\n                                : null\n                        }\n                        onRowExpand={\n                            enableSubRows\n                                ? (isExpanded: boolean, rowUniqueKey: string) => {\n                                      setData(\n                                          data.map((item: any) => {\n                                              if (item.firstName === rowUniqueKey) {\n                                                  item.expanded = isExpanded;\n                                              }\n                                              return item;\n                                          })\n                                      );\n                                  }\n                                : null\n                        }\n                    >\n                        <TableHeader>\n                            <TableRow {...selectAllIndicator} checkboxProps={{ \"aria-label\": \"Select all rows\" }}>\n                                {columns.map((item: Column, index: number) => (\n                                    <TableHeaderCell {...item} key={index} scope=\"col\" aria-sort={getSortOrder(item)}>\n                                        {enableSorting ? (\n                                            <Button theme=\"secondary\" className=\"p-0 text-dark\" aria-label={`sort by ${item.label} in ${getSortOrderLabel(item)} order`}>\n                                                {item.label}\n                                            </Button>\n                                        ) : (\n                                            item.label\n                                        )}\n                                    </TableHeaderCell>\n                                ))}\n                            </TableRow>\n                        </TableHeader>\n                        <TableBody>\n                            {data.map((row: GenericTableRow<TableDataProps>, rowIndex: number) => (\n                                <React.Fragment key={`row-${rowIndex}`}>\n                                    <TableRow\n                                        uniqueKey={row.firstName}\n                                        checked={row.checked}\n                                        isExpanded={row.expanded}\n                                        checkboxProps={{\n                                            \"aria-label\": `Select row ${row.firstName} ${row.lastName}`,\n                                        }}\n                                        collapseButtonProps={{\n                                            \"aria-controls\": row.subRows.map((_, subIndex: number) => `${row.firstName}-sub-${subIndex}`).join(\" \"),\n                                            \"aria-label\": `Expand details for ${row.firstName} ${row.lastName}`,\n                                        }}\n                                    >\n                                        {columns.map((item: Column, index: number) => {\n                                            return (\n                                                <TableCell {...item} key={index}>\n                                                    {row[item.accessor]}\n                                                </TableCell>\n                                            );\n                                        })}\n                                    </TableRow>\n                                    {enableSubRows &&\n                                        row.subRows?.map((sub: TableDataProps, subIndex: number) => (\n                                            <TableRow isSubRow key={`rowsub-${subIndex}`} id={`${row.firstName}-sub-${subIndex}`}>\n                                                {columns.map((item, index) => {\n                                                    return (\n                                                        <TableCell {...item} key={`rowsub-${subIndex}-${index}`}>\n                                                            {sub[item.accessor]}\n                                                        </TableCell>\n                                                    );\n                                                })}\n                                            </TableRow>\n                                        ))}\n                                </React.Fragment>\n                            ))}\n                        </TableBody>\n                        {enablePagination && (\n                            <tfoot>\n                                <tr>\n                                    <td colSpan={4}>\n                                        <NumberedPagination start={1} end={pages} value={paginationValue} onPageChange={setPaginationValue} />\n                                    </td>\n                                </tr>\n                            </tfoot>\n                        )}\n                    </Table>\n                </div>\n            }\n            code={code}\n            controls={\n                <React.Fragment>\n                    {enableFilter && (\n                        <div className=\"filter-holder\">\n                            <label>Filter by status</label>\n                            <Dropdown value={dropDownListSelected} onMultipleChange={onDropdownChange} placeholder=\"Select filter...\" multiple>\n                                {statusDropdownList.map((item: string, i: number) => (\n                                    <option key={i} value={item}>\n                                        {item}\n                                    </option>\n                                ))}\n                            </Dropdown>\n                        </div>\n                    )}\n                    {enablePagination && (\n                        <div className=\"filter-holder\">\n                            <Textbox\n                                name=\"textInput3\"\n                                label=\"Pagination size\"\n                                placeholder=\"Pagination size\"\n                                value={pagingSize}\n                                onChange={(e: React.ChangeEvent<HTMLInputElement>) => setPagingSize(isNaN(parseInt(e.target.value)) ? 10 : parseInt(e.target.value))}\n                            />\n                        </div>\n                    )}\n                    {enableSearch && (\n                        <div className=\"filter-holder\">\n                            <Textbox name=\"textInput2\" label=\"Search last name\" placeholder=\"Search by last name\" value={searchText} onChange={handleTextChange} />\n                        </div>\n                    )}\n                    {renderControls()}\n                </React.Fragment>\n            }\n            note={\n                <>\n                    <div>\n                        <h3>Using built-in table row selection function</h3>\n                        <p>\n                            The developer will just need to pass in <code>onRowSelect</code> callback function in <code>{`<Table />`}</code> and Checkbox will be appended automatically to rows.\n                        </p>\n                        An example can be found below:\n                        <CodeSnippet language=\"jsx\">\n                            {`<Table onRowSelect={(event: React.ChangeEvent<HTMLInputElement>, rowUniqueKey: string) => console.log(event, rowUniqueKey)}>\n    <TableHeader>...</TableHeader>\n    <TableBody>\n        <TableRow uniqueKey={row.id} checked={row.checked}>\n            ...\n        </TableRow>\n    </TableBody>\n</Table>`}\n                        </CodeSnippet>\n                    </div>\n                    <div className=\"mt-5\">\n                        <h3>Using built-in table row expand function</h3>\n                        <p>\n                            The developer will just need to pass in <code>onRowExpand</code> callback function in <code>{`<Table />`}</code> and collapse icon will be appended automatically to rows.\n                        </p>\n                        An example can be found below:\n                        <CodeSnippet language=\"jsx\">\n                            {`<Table onRowExpand={(isExpanded: boolean, rowUniqueKey: string) => console.log(isExpanded, rowUniqueKey)}>\n    <TableHeader>...</TableHeader>\n    <TableBody>\n        <TableRow uniqueKey={row.id} isExpanded={row.expanded}>\n            ...\n        </TableRow>\n    </TableBody>\n</Table>`}\n                        </CodeSnippet>\n                    </div>\n                    <div className=\"mt-5\">\n                        <h3>Using built-in onSort function</h3>\n                        <p>\n                            The developer will just need to pass in <code>onSort</code> callback function in <code>{`<Table />`}</code> and sort icon will be appended automatically to header.\n                        </p>\n                        An example can be found below:\n                        <CodeSnippet language=\"jsx\">\n                            {`<Table onSort={sortedColumn: SortedColumn) => console.log(sortedColumn)}>\n    <TableHeader>...</TableHeader>\n    <TableBody>...</TableBody>\n</Table>`}\n                        </CodeSnippet>\n                        <h4 className=\"mt-4\">Disabling sort on column</h4>\n                        <p>The developer can disable sort on specific column.</p>\n                        An example can be found below:\n                        <CodeSnippet language=\"jsx\">\n                            {`<Table onSort={sortedColumn: SortedColumn) => console.log(sortedColumn)}>\n    <TableHeader>\n        <TableRow>\n            <TableHeaderCell accessor=\"id\" disableSort>ID</TableHeaderCell>\n            <TableHeaderCell accessor=\"name\">Name</TableHeaderCell>\n        </TableRow>\n    </TableHeader>\n    <TableBody>...</TableBody>\n</Table>`}\n                        </CodeSnippet>\n                        <h4 className=\"mt-4\">Setting default sort direction on column</h4>\n                        <p>The developer can specify sort direction on column. Currently only support single sort column.</p>\n                        An example can be found below:\n                        <CodeSnippet language=\"jsx\">\n                            {`<Table onSort={sortedColumn: SortedColumn) => console.log(sortedColumn)}>\n    <TableHeader>\n        <TableRow>\n            <TableHeaderCell accessor=\"id\" sortDirection={SortDirection.ASC}>ID</TableHeaderCell>\n            <TableHeaderCell accessor=\"name\">Name</TableHeaderCell>\n        </TableRow>\n    </TableHeader>\n    <TableBody>...</TableBody>\n</Table>`}\n                        </CodeSnippet>\n                    </div>\n                </>\n            }\n        />\n    );\n};\n\nexport default TablePage;\n\ntype TableCell = any;\n\n/**\n * <Table\n    onSort={sortedColumn: SortedColumn) => console.log(sortedColumn)}\n    onRowSelect={(event: React.ChangeEvent<HTMLInputElement>, rowUniqueKey: string) => console.log(event, rowUniqueKey)}\n    onRowExpand={(isExpanded: boolean, rowUniqueKey: string) => console.log(isExpanded, rowUniqueKey)}>\n    <TableHeader>...</TableHeader>\n    <TableBody>...</TableBody>\n</Table>\n */\n","import React from \"react\";\nimport classnames from \"classnames\";\n\nexport type ButtonTheme = \"primary\" | \"secondary\" | \"danger\" | \"outline-primary\" | \"outline-danger\" | \"dark\" | \"light\" | \"link\";\nexport type ButtonSize = \"lg\" | \"md\" | \"sm\";\n\nexport type ButtonProps = JSX.IntrinsicElements[\"button\"] & {\n    /** Button Theme */\n    theme?: ButtonTheme;\n    /** Button size */\n    size?: ButtonSize;\n    /** Fill the parent width */\n    block?: boolean;\n};\n/** Buttons allow users to take action with a single tap. */\nexport const Button: React.FC<ButtonProps> = React.memo(\n    React.forwardRef(({ theme = \"primary\", size, block, ...props }: ButtonProps, ref: React.ForwardedRef<HTMLButtonElement>) => {\n        return (\n            <button {...props} ref={ref} className={classnames(\"rc\", \"btn\", `btn-${theme}`, { [`btn-${size}`]: size, \"btn-block\": block }, props.className)}>\n                {props.children}\n            </button>\n        );\n    })\n);\n","import React from \"react\";\nimport { Pagination, PaginationProps } from \"./Pagination\";\nimport { Page, PageProps } from \"./Page\";\n\nexport interface NumberedPagesProps extends PaginationProps {\n    /** The number of the first item */\n    start?: number;\n    /** The number of the last item */\n    end: number;\n    /** A string mask representing the generic href syntax that include `$i` that would be replaced by the page number automatically */\n    hrefMask?: string;\n    /** Page link props */\n    pageLinkProps?: PageProps;\n}\n\nexport const NumberedPagination: React.FC<NumberedPagesProps> = React.memo(\n    React.forwardRef(({ start = 1, end, hrefMask, pageLinkProps, ...props }: NumberedPagesProps, ref: React.ForwardedRef<HTMLElement>) => {\n        const [pages, setPages] = React.useState<number[]>([]);\n\n        React.useEffect(() => {\n            const arr: number[] = [];\n\n            for (let i: number = start; i <= end; i++) {\n                arr.push(i);\n            }\n\n            setPages(arr);\n        }, [start, end]);\n\n        return (\n            <Pagination {...props} ref={ref}>\n                {pages.map((page: number, index: number) => (\n                    <Page {...pageLinkProps} key={index} href={hrefMask?.includes(\"$i\") ? hrefMask.replace(\"$i\", page.toString()) : null}>\n                        {page}\n                    </Page>\n                ))}\n            </Pagination>\n        );\n    })\n);\n\nexport default NumberedPagination;\n","import React from \"react\";\nimport classnames from \"classnames\";\n\nexport type PageProps = JSX.IntrinsicElements[\"li\"] & {\n    /** The page's link. This is used to allow the user to open the page in a new browser tab. */\n    href?: string;\n    /** Anchor element properties */\n    anchorProps?: JSX.IntrinsicElements[\"a\"];\n};\n\nexport const Page: React.FC<PageProps> = React.memo(\n    React.forwardRef(({ href, anchorProps, ...props }: PageProps, ref: React.ForwardedRef<HTMLLIElement>) => {\n        return (\n            <li {...props} ref={ref} className={classnames(\"page-item\", { active: props[\"data-active\"], disabled: props[\"data-disabled\"] }, props.className)}>\n                <a {...anchorProps} className=\"page-link\" href={href || \"#\"} onClick={(e) => e.preventDefault()} aria-disabled={props[\"data-disabled\"]}>\n                    {props.children}\n                </a>\n            </li>\n        );\n    })\n);\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { Page, PageProps } from \"./Page\";\nimport \"./pagination.scss\";\n\nconst ChevronLeftIcon: JSX.Element = (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" d=\"M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\" />\n    </svg>\n);\nconst ChevronDoubleLeftIcon: JSX.Element = (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" d=\"M8.354 1.646a.5.5 0 0 1 0 .708L2.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\" />\n        <path fillRule=\"evenodd\" d=\"M12.354 1.646a.5.5 0 0 1 0 .708L6.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\" />\n    </svg>\n);\n\nexport interface CustomNavs {\n    next?: React.ReactNode;\n    previous?: React.ReactNode;\n    last?: React.ReactNode;\n    first?: React.ReactNode;\n}\n\nexport type PaginationSize = \"sm\" | \"md\" | \"lg\";\n\nexport type PaginationProps = JSX.IntrinsicElements[\"nav\"] & {\n    /** Override navigation buttons */\n    navs?: CustomNavs;\n    /** The maximum number of pagination buttons to show. Default is 10 */\n    offset?: number;\n    /** On value change handler */\n    onPageChange?: (index: number) => void;\n    /** The size of the buttons. Available sizes: \"sm\", \"md\", \"lg\". Default is \"md\" */\n    size?: PaginationSize;\n    /** Use dot-navigation */\n    useDotNav?: boolean;\n    /** Shows first and last buttons  */\n    showFirstAndLast?: boolean;\n    /** The index of the current page. The index is based on the children rendered starting from 0. */\n    value?: number;\n    /** First page link props */\n    firstPageLinkProps?: PageProps;\n    /** Last page link props */\n    lastPageLinkProps?: PageProps;\n    /** Next page link props */\n    nextPageLinkProps?: PageProps;\n    /** Previous page link props */\n    previousPageLinkProps?: PageProps;\n};\n\nexport const Pagination: React.FunctionComponent<PaginationProps> = React.memo(\n    React.forwardRef(\n        (\n            {\n                navs = {},\n                offset = 5,\n                onPageChange,\n                size = \"md\",\n                useDotNav,\n                showFirstAndLast: useFirstAndLast,\n                value = 0,\n                firstPageLinkProps = {},\n                lastPageLinkProps = {},\n                nextPageLinkProps = {},\n                previousPageLinkProps = {},\n                ...props\n            }: PaginationProps,\n            ref: React.ForwardedRef<HTMLElement>\n        ) => {\n            const total: number = React.Children.count(props.children);\n            const indexOfLastItem: number = total - 1;\n            const disablePrev: boolean = total < 2 || value === 0;\n            const disableNext: boolean = total < 2 || value === indexOfLastItem;\n\n            const renderPages = (): React.ReactElement[] => {\n                const childrenArray: React.ReactElement[] =\n                    React.Children.map(props.children, (Child: React.ReactElement<PageProps>, i: number) => {\n                        const anchorProps: JSX.IntrinsicElements[\"a\"] = { \"aria-current\": value === i };\n                        return React.isValidElement<PageProps>(Child)\n                            ? React.cloneElement<any>(Child, {\n                                  \"data-active\": value === i,\n                                  \"data-index-number\": i,\n                                  key: i,\n                                  anchorProps: Child.props.anchorProps ? { ...Child.props.anchorProps, ...anchorProps } : anchorProps,\n                                  onClick: (e: React.MouseEvent<HTMLLIElement>) => {\n                                      onPageChange && onPageChange(parseInt(e.currentTarget.dataset.indexNumber, 10));\n                                  },\n                              })\n                            : Child;\n                    }) || [];\n\n                if (offset) {\n                    /** The distance between the current value and the offset from the left. Example: ...👉|3|4|👈|(5)|6|7|... */\n                    const offsetToValue: number = value - Math.floor(offset / 2);\n                    /** The distance between the current value and the offset from the right. Example: ...|3|4|(5)|👉|6|7|👈... */\n                    const valueToOffset: number = value + Math.floor(offset / 2);\n\n                    let offsetFrom: number = offsetToValue;\n                    let offsetTo: number = valueToOffset;\n\n                    if (offsetToValue < 0) {\n                        offsetTo += 0 - offsetToValue;\n                        offsetTo = offsetTo > indexOfLastItem ? indexOfLastItem : offsetTo;\n                    }\n                    if (valueToOffset > indexOfLastItem) {\n                        offsetFrom -= valueToOffset - indexOfLastItem;\n                        offsetFrom = offsetFrom < 0 ? 0 : offsetFrom;\n                    }\n\n                    let filteredArray: React.ReactElement[] = childrenArray.filter((_: any, i: number) => i >= offsetFrom && i <= offsetTo);\n\n                    if (!useDotNav) {\n                        if (parseInt(filteredArray[0]?.props[\"data-index-number\"], 10) > 0) {\n                            filteredArray = [\n                                <Page className=\"pre-ellipsis\" key=\"pre-ellipsis\" data-disabled href={props.children[0]?.props?.href}>\n                                    ...\n                                </Page>,\n                                ...filteredArray,\n                            ];\n                        }\n                        if (parseInt(filteredArray[filteredArray.length - 1]?.props[\"data-index-number\"], 10) < indexOfLastItem) {\n                            filteredArray.push(\n                                <Page className=\"post-ellipsis\" key=\"post-ellipsis\" data-index-number={indexOfLastItem} data-disabled>\n                                    ...\n                                </Page>\n                            );\n                        }\n                    }\n                    return filteredArray;\n                } else {\n                    return childrenArray;\n                }\n            };\n\n            const filteredPages = renderPages();\n\n            const showFirst: boolean = (useFirstAndLast && !useDotNav) || (useDotNav && !disablePrev && filteredPages[0].props[\"data-index-number\"] != 0);\n            const showLast: boolean = (useFirstAndLast && !useDotNav) || (useDotNav && !disableNext && filteredPages[filteredPages.length - 1].props[\"data-index-number\"] != indexOfLastItem);\n            const disableFirst: boolean = disablePrev || filteredPages[0].key !== \"pre-ellipsis\";\n            const disableLast: boolean = disableNext || filteredPages[filteredPages.length - 1].key !== \"post-ellipsis\";\n\n            return (\n                <nav {...props} role=\"navigation\" ref={ref} className={classnames(\"rc\", props.className)}>\n                    <ul className={classnames(\"pagination\", { [`pagination-${size}`]: size, dotnav: useDotNav })}>\n                        {props.children && (\n                            <>\n                                {showFirst && (\n                                    <Page\n                                        {...firstPageLinkProps}\n                                        className=\"first-nav\"\n                                        onClick={() => !disableFirst && onPageChange(0)}\n                                        data-disabled={disableFirst}\n                                        href={props.children[0]?.props?.href}\n                                    >\n                                        {navs?.first || ChevronDoubleLeftIcon}\n                                    </Page>\n                                )}\n                                {!useDotNav && (\n                                    <Page\n                                        {...previousPageLinkProps}\n                                        className=\"previous-nav\"\n                                        onClick={() => !disablePrev && onPageChange(value - 1)}\n                                        data-disabled={disablePrev}\n                                        href={props.children[value - 1]?.props?.href}\n                                    >\n                                        {navs?.previous || ChevronLeftIcon}\n                                    </Page>\n                                )}\n\n                                {filteredPages}\n\n                                {!useDotNav && (\n                                    <Page\n                                        {...nextPageLinkProps}\n                                        className=\"next-nav\"\n                                        onClick={() => !disableNext && onPageChange(value + 1)}\n                                        data-disabled={disableNext}\n                                        href={props.children[value + 1]?.props?.href}\n                                    >\n                                        {navs?.next || React.cloneElement(ChevronLeftIcon, { className: \"h-flipped\" })}\n                                    </Page>\n                                )}\n                                {showLast && (\n                                    <Page\n                                        {...lastPageLinkProps}\n                                        className=\"last-nav\"\n                                        onClick={() => !disableLast && onPageChange(indexOfLastItem)}\n                                        data-disabled={disableLast}\n                                        href={props.children[indexOfLastItem]?.props?.href}\n                                    >\n                                        {navs?.last || React.cloneElement(ChevronDoubleLeftIcon, { className: \"h-flipped\" })}\n                                    </Page>\n                                )}\n                            </>\n                        )}\n                    </ul>\n                </nav>\n            );\n        }\n    )\n);\n","import React from \"react\";\nimport { SortDirection } from \"./table-typings\";\n\nexport interface SortedColumn<T = any> {\n    accessor: keyof T;\n    sortDirection: SortDirection;\n}\n\ninterface TableState {\n    sortedColumn: SortedColumn;\n    expandedRows: Array<string>;\n}\n\nexport type TableContextType = {\n    tableState: TableState;\n    setTableState: (newState: TableState) => void;\n    onRowSelect: (event: React.ChangeEvent<HTMLInputElement>, rowKey: string) => void;\n    onRowExpand: (isExpanded: boolean, rowKey: string) => void;\n    onSort: any;\n};\n\nconst defaultContext: TableContextType = {\n    tableState: {\n        sortedColumn: null,\n        expandedRows: [],\n    },\n    setTableState: null,\n    onRowSelect: null,\n    onRowExpand: null,\n    onSort: null,\n};\nexport const TableContext = React.createContext(defaultContext);\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { SortedColumn, TableContext } from \"./TableContextProvider\";\nimport \"./table.scss\";\n\nexport type TableTheme = \"light\" | \"dark\";\n\nexport type TableProps = JSX.IntrinsicElements[\"table\"] & {\n    /** callback when row is selected */\n    onRowSelect?: (event: React.ChangeEvent<HTMLInputElement>, rowKey: string) => void;\n    /** callback when row is expanded */\n    onRowExpand?: (isExpanded: boolean, rowKey: string) => void;\n    /** table theme */\n    theme?: TableTheme;\n    /** callback when column is sorted */\n    onSort?: (sortedColumn: SortedColumn) => void;\n    /** preset sorted column */\n    sortedColumn?: SortedColumn;\n};\n\nexport const Table: React.FunctionComponent<TableProps> = React.memo(\n    React.forwardRef(({ onRowSelect, onRowExpand, onSort, sortedColumn, theme = \"light\", className, ...props }: TableProps, ref: React.ForwardedRef<HTMLTableElement>): React.ReactElement<void> => {\n        const [tableState, setTableState] = React.useState({ expandedRows: [], sortedColumn });\n        return (\n            <TableContext.Provider value={{ tableState, onSort, onRowSelect, onRowExpand, setTableState }}>\n                <table {...props} className={classnames(\"table\", className, theme)} ref={ref} />\n            </TableContext.Provider>\n        );\n    })\n);\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { SortDirection } from \"../table-typings\";\nimport { SortedColumn, TableContext } from \"../TableContextProvider\";\n\nexport type TableHeaderCellProps<T = any> = JSX.IntrinsicElements[\"th\"] & {\n    accessor?: keyof T;\n    disableSort?: boolean;\n    sortDirection?: SortDirection;\n};\n\nconst TableHeaderCell: React.FC<TableHeaderCellProps> = React.forwardRef(\n    ({ accessor, disableSort, className, sortDirection, onClick, ...props }: TableHeaderCellProps, ref: React.ForwardedRef<HTMLTableCellElement>) => {\n        const context = React.useContext(TableContext);\n        const [sortedColumn, setSortedColumn] = React.useState<SortedColumn>(null);\n        const [sortOrder, setSortOrder] = React.useState<SortDirection>(SortDirection.ASC);\n        const [sortable, setSortable] = React.useState<boolean>(false);\n\n        /**\n         * get latest sort direction\n         * @param oldSortDirection current sort direction\n         */\n        const getSortDirection = (oldSortDirection: SortDirection): SortDirection => {\n            return oldSortDirection === SortDirection.ASC ? SortDirection.DESC : SortDirection.ASC;\n        };\n\n        /** on column sort */\n        const onSort = React.useCallback(() => {\n            const newSortedColumn: SortedColumn =\n                sortedColumn && sortedColumn.accessor === accessor ? { ...sortedColumn, sortDirection: getSortDirection(sortedColumn.sortDirection) } : { accessor, sortDirection: SortDirection.DESC };\n            context.setTableState({ ...context.tableState, sortedColumn: newSortedColumn });\n            !!newSortedColumn && context.onSort(newSortedColumn);\n        }, [sortedColumn, context]);\n\n        React.useEffect(() => {\n            setSortable(!disableSort && !!context.onSort);\n        }, [disableSort, context.onSort]);\n\n        React.useEffect(() => {\n            setSortedColumn(context.tableState.sortedColumn);\n        }, [context.tableState.sortedColumn]);\n\n        React.useEffect(() => {\n            if (sortDirection && context.onSort) {\n                context.setTableState({ ...context.tableState, sortedColumn: { accessor, sortDirection } });\n            }\n        }, [sortDirection, context.onSort]);\n\n        React.useEffect(() => {\n            setSortOrder(sortable && sortedColumn?.accessor === accessor ? sortedColumn?.sortDirection : null);\n        }, [sortable, sortedColumn]);\n\n        return (\n            <th\n                {...props}\n                className={classnames(className, { sort: sortable, \"sort-asc\": sortable && sortOrder === SortDirection.ASC, \"sort-desc\": sortable && sortOrder === SortDirection.DESC })}\n                onClick={sortable ? onSort : onClick}\n                ref={ref}\n            />\n        );\n    }\n);\n\nTableHeaderCell.displayName = \"TableHeaderCell\";\n\nexport { TableHeaderCell };\n","import React from \"react\";\nimport { TableRowProps } from \"./TableRow\";\n\nexport type TableHeaderProps = JSX.IntrinsicElements[\"thead\"];\n\nconst TableHeader: React.FC<TableHeaderProps> = React.forwardRef(({ ...props }: TableHeaderProps, ref: React.ForwardedRef<HTMLTableSectionElement>) => {\n    return (\n        <thead {...props} ref={ref}>\n            {React.Children.count(props.children) === 1 && React.isValidElement<TableRowProps>(props.children)\n                ? React.cloneElement<any>(props.children, { isHeaderRow: true, index: -1 })\n                : React.Children.map(props.children, (Child: React.ReactElement<any>, i: number) => {\n                      return React.isValidElement<TableRowProps>(Child) && (Child?.type as any)?.displayName === \"TableRow\"\n                          ? React.cloneElement<any>(Child, {\n                                index: i,\n                                hideSelect: !Child.props.isHeaderRow,\n                            })\n                          : Child;\n                  })}\n        </thead>\n    );\n});\n\nTableHeader.displayName = \"TableHeader\";\n\nexport { TableHeader };\n","import React from \"react\";\nimport { TableRowProps } from \"./TableRow\";\n\nexport type TableBodyProps = JSX.IntrinsicElements[\"tbody\"];\n\nconst TableBody: React.FC<TableBodyProps> = React.forwardRef(({ ...props }: TableBodyProps, ref: React.ForwardedRef<HTMLTableSectionElement>) => {\n    let parentKey: string;\n\n    /**\n     * clone table row by appending parent key to sub row if necessary\n     * @param Child react element\n     * @param index index number\n     */\n    const cloneTableRow = React.useCallback((Child: React.ReactElement<any>, index: number) => {\n        const isTableRow: boolean = React.isValidElement<React.FC<TableRowProps>>(Child) && (Child?.type as any)?.displayName === \"TableRow\";\n        if (isTableRow && !Child.props.isSubRow) {\n            parentKey = Child.props.uniqueKey;\n        }\n        return isTableRow ? React.cloneElement<any>(Child, { index, parentKey }) : Child;\n    }, []);\n\n    return (\n        <tbody {...props} ref={ref}>\n            {React.Children.map(props.children, (Child: React.ReactElement<any>, i: number) => {\n                if (Child?.type === React.Fragment) {\n                    return React.cloneElement<any>(Child, {\n                        children: React.Children.map(Child.props.children, (FragmentChild: React.ReactElement<any>, fragmentIndex: number) => cloneTableRow(FragmentChild, fragmentIndex)),\n                    });\n                } else {\n                    return cloneTableRow(Child, i);\n                }\n            })}\n        </tbody>\n    );\n});\n\nTableBody.displayName = \"TableBody\";\n\nexport { TableBody };\n","import React from \"react\";\n\nexport type TableCellProps<T = any> = JSX.IntrinsicElements[\"td\"];\n\nconst TableCell: React.FC<TableCellProps> = React.forwardRef(({ ...props }: TableCellProps, ref: React.ForwardedRef<HTMLTableCellElement>) => {\n    return <td {...props} ref={ref} />;\n});\n\nTableCell.displayName = \"TableCell\";\n\nexport { TableCell };\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { Checkbox } from \"../../Checkbox\";\nimport { TableContext } from \"../TableContextProvider\";\nimport { TableHeaderCell, TableHeaderCellProps } from \"./TableHeaderCell\";\nimport { TableCell, TableCellProps } from \"./TableCell\";\nimport { randomId } from \"@sebgroup/frontend-tools/randomId\";\n\nexport type TableRowProps<T = any> = JSX.IntrinsicElements[\"tr\"] & {\n    checked?: boolean;\n    indeterminate?: boolean;\n    isHeaderRow?: boolean;\n    hideSelect?: boolean;\n    uniqueKey?: string;\n    parentKey?: string;\n    isExpanded?: boolean;\n    isSubRow?: boolean;\n    collapseButtonProps?: JSX.IntrinsicElements[\"button\"];\n    checkboxProps?: JSX.IntrinsicElements[\"input\"];\n};\n\nconst angleDown: JSX.Element = (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 256 512\">\n        <path d=\"M119.5 326.9L3.5 209.1c-4.7-4.7-4.7-12.3 0-17l7.1-7.1c4.7-4.7 12.3-4.7 17 0L128 287.3l100.4-102.2c4.7-4.7 12.3-4.7 17 0l7.1 7.1c4.7 4.7 4.7 12.3 0 17L136.5 327c-4.7 4.6-12.3 4.6-17-.1z\" />\n    </svg>\n);\nconst angleRightIcon: JSX.Element = (\n    <svg name=\"angle-right\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 192 512\">\n        <path d=\"M166.9 264.5l-117.8 116c-4.7 4.7-12.3 4.7-17 0l-7.1-7.1c-4.7-4.7-4.7-12.3 0-17L127.3 256 25.1 155.6c-4.7-4.7-4.7-12.3 0-17l7.1-7.1c4.7-4.7 12.3-4.7 17 0l117.8 116c4.6 4.7 4.6 12.3-.1 17z\" />\n    </svg>\n);\n\nconst TableRow: React.FC<TableRowProps> = React.forwardRef(\n    (\n        {\n            className,\n            isHeaderRow,\n            hideSelect,\n            uniqueKey,\n            parentKey,\n            checked = false,\n            indeterminate = false,\n            isSubRow = false,\n            isExpanded = false,\n            checkboxProps = {},\n            collapseButtonProps = {},\n            ...props\n        }: TableRowProps,\n        ref: React.ForwardedRef<HTMLTableRowElement>\n    ) => {\n        const context = React.useContext(TableContext);\n        const [uniqueId, setUniqueId] = React.useState<string>(uniqueKey);\n        const [isShown, setIsShown] = React.useState<boolean>(false);\n        const [expanded, setExpanded] = React.useState<boolean>(isExpanded);\n        const [isParentRow, setIsParentRow] = React.useState<boolean>(isExpanded);\n        const [columnProps, setColumnProps] = React.useState<TableHeaderCellProps | TableCellProps>(null);\n        const [expandedRows, setExpandedRows] = React.useState<Array<string>>(context.tableState?.expandedRows || []);\n\n        /** initiate default expanded row */\n        const initiateExpandedRows = React.useCallback(() => {\n            const newExpandedRows: Array<string> = [...expandedRows];\n            const expandedIndex: number = newExpandedRows.indexOf(uniqueId);\n            if (isExpanded && expandedIndex === -1) {\n                newExpandedRows.push(uniqueId);\n            } else if (expandedIndex > -1) {\n                const expandedIndex: number = newExpandedRows.indexOf(uniqueId);\n                newExpandedRows.splice(expandedIndex, 1);\n            }\n            context.setTableState({ ...context.tableState, expandedRows: newExpandedRows });\n            setExpandedRows(newExpandedRows);\n        }, [isExpanded, uniqueId]);\n\n        React.useEffect(() => {\n            setUniqueId(isHeaderRow ? \"all\" : uniqueKey || randomId(\"table-row\"));\n        }, [uniqueKey, isHeaderRow]);\n\n        React.useEffect(() => {\n            setExpandedRows(context.tableState.expandedRows || []);\n        }, [context.tableState.expandedRows]);\n\n        React.useEffect(() => {\n            setExpanded(isExpanded);\n            if (!isSubRow && !isHeaderRow && context.onRowExpand) {\n                initiateExpandedRows();\n            }\n        }, [isExpanded, initiateExpandedRows]);\n\n        React.useEffect(() => {\n            setColumnProps(isHeaderRow ? { disableSort: true } : null);\n        }, [isHeaderRow]);\n\n        React.useEffect(() => {\n            setIsParentRow(!(isHeaderRow || isSubRow));\n        }, [isHeaderRow, isSubRow]);\n\n        React.useEffect(() => {\n            if (context.onRowExpand) {\n                setIsShown(isSubRow && expandedRows.indexOf(parentKey) > -1);\n            }\n        }, [expandedRows]);\n\n        const Cell: React.FC<TableHeaderCellProps | TableCellProps> = isHeaderRow ? TableHeaderCell : TableCell;\n\n        return (\n            <tr {...props} ref={ref} className={classnames(className, { \"sub-row\": isSubRow, expanded: isExpanded, collapsible: isParentRow && !!context.onRowExpand, show: isShown })}>\n                {!!context.onRowExpand && (\n                    <Cell {...columnProps} className={classnames({ \"collapse-control\": isParentRow })}>\n                        {isParentRow && (\n                            <button {...collapseButtonProps} className={classnames(\"btn btn-sm\", collapseButtonProps.className)} onClick={() => context.onRowExpand(!isExpanded, uniqueId)}>\n                                <div className=\"icon-holder\">{expanded ? angleDown : angleRightIcon}</div>\n                            </button>\n                        )}\n                    </Cell>\n                )}\n                {!!context.onRowSelect && (\n                    <Cell {...columnProps} className={classnames({ \"select-control\": !(hideSelect || isSubRow) })}>\n                        {!(hideSelect || isSubRow) && (\n                            <Checkbox\n                                {...checkboxProps}\n                                checked={checked}\n                                ref={(input: HTMLInputElement) => {\n                                    if (input) {\n                                        input.indeterminate = indeterminate && !checked;\n                                    }\n                                }}\n                                name={`tb_checkbox_${uniqueId}`}\n                                id={`tb_checkbox_${uniqueId}`}\n                                onChange={(event: React.ChangeEvent<HTMLInputElement>) => context.onRowSelect(event, uniqueId)}\n                            />\n                        )}\n                    </Cell>\n                )}\n                {props.children}\n            </tr>\n        );\n    }\n);\n\nTableRow.displayName = \"TableRow\";\n\nexport { TableRow };\n","import { FilterColumn, GenericTableRow, SortDirection } from \"../table-typings\";\n\n/**\n * sum the total of columns or cols in a row\n * @param colsLength the length of the columns\n * @param useSelection add a column for selection checkboxes\n * @param useShowActionColumn add another column for action columns\n * @param useGroupBy add another columns for groupby\n */\nexport function sumCols(colsLength: number, useSelection?: boolean, useShowActionColumn?: boolean, useGroupBy?: boolean): number {\n    let sum = colsLength;\n\n    if (useSelection) {\n        sum = sum + 1;\n    }\n\n    if (useGroupBy) {\n        sum = sum + 1;\n    }\n    if (useShowActionColumn) {\n        sum = sum + 1;\n    }\n\n    return sum;\n}\n\n/**\n * sort array of tabke rows\n * @param items table rows array\n * @param columnName the target column name\n * @param sortDirection the sort direction\n * @return Array of tableRow\n */\nexport function sortArray<T = any>(items: Array<T> = [], columnName: keyof T, sortDirection: SortDirection): Array<T> {\n    const languages: Readonly<Array<string>> = window.navigator?.languages || [\"sw\", \"en\"];\n\n    const sortedItems: Array<any> = [...items].sort((firstItem: T, secondItem: T) => {\n        let result: number = 0;\n        if (sortDirection === SortDirection.ASC) {\n            if (isNaN(secondItem[columnName as string]) && isNaN(firstItem[columnName as string])) {\n                result = String(firstItem[columnName as string]).localeCompare(String(secondItem[columnName as string]), languages as Array<string>, { sensitivity: \"base\", ignorePunctuation: true });\n            } else {\n                result = firstItem[columnName as string] - secondItem[columnName as string];\n            }\n        } else {\n            if (isNaN(secondItem[columnName as string]) && isNaN(firstItem[columnName as string])) {\n                result = String(secondItem[columnName as string]).localeCompare(String(firstItem[columnName as string]), languages as Array<string>, { sensitivity: \"base\", ignorePunctuation: true });\n            } else {\n                result = secondItem[columnName as string] - firstItem[columnName as string];\n            }\n        }\n        return result;\n    });\n    return sortedItems;\n}\n\n/**\n *\n * @param data table data\n * @param filterColumns filter columns\n */\nexport function filterArrayByColumns<T = any>(data: Array<T>, filterColumns: Array<FilterColumn<T>>): Array<T> {\n    return data.filter((row: T) => {\n        return (\n            filterColumns.length === 0 ||\n            filterColumns.every((column: FilterColumn) => {\n                return Array.isArray(column.value) ? column.value.length === 0 || column.value.indexOf(row[column.accessor]) > -1 : row[column.accessor] === column.value;\n            })\n        );\n    });\n}\n\n/**\n * search text in array of table row\n * @param data the array of table rows\n * @param keyword The keyword to search in the array\n * @param searchFields the target field to search\n */\nexport function searchTextByColumns<T = any>(data: Array<T>, keyword: string, searchFields: Array<keyof T>): Array<T> {\n    return [...data].filter((row: T) => {\n        const searchText: string = String(keyword);\n\n        return searchFields?.some((searchColumn: keyof T) => {\n            let result: boolean = false;\n            const searchField: string = searchColumn as string;\n            const regEx: RegExp = new RegExp(searchText, \"gi\");\n            if (row[searchField] === null || row[searchField] === undefined) {\n                result = false;\n            } else if (typeof row[searchField] === \"string\") {\n                result = row[searchField].search(regEx) > -1;\n            } else if (typeof row[searchField] === \"number\") {\n                result = String(row[searchField]).search(regEx) !== -1;\n            }\n            return result;\n        });\n    });\n}\n\n/**\n * paginate data\n * @param data table data\n * @param offset page size\n * @param currentPage current page index\n */\nexport function paginate<T = any>(data: Array<T>, offset: number, currentPage: number) {\n    if (offset && data?.length > 0) {\n        const start: number = currentPage * offset;\n        const end: number = offset + start;\n\n        const currentPageData: Array<T> = data?.slice(start, end);\n        return currentPageData;\n    }\n    return data;\n}\n\nexport interface RowSelectOutput<T = any> {\n    data: Array<GenericTableRow<T>>;\n    isAllSelected: boolean;\n    isIndeterminate: boolean;\n}\n\n/**\n * on row select\n * @param event input event\n * @param data rows of data\n * @param rowUniqueAccessor row unique accessor\n * @param rowId row id value\n */\nexport function onRowSelect<T = any>(event: React.ChangeEvent<HTMLInputElement>, data: Array<GenericTableRow<T>>, rowUniqueAccessor: keyof GenericTableRow<T>, rowId: string): RowSelectOutput {\n    const target: HTMLInputElement = event.target;\n    let isAllSelected: boolean = true;\n    let isIndeterminate: boolean = false;\n    const newData: Array<GenericTableRow<T>> = data?.map((row: GenericTableRow<T>) => {\n        if (row[rowUniqueAccessor] === rowId || rowId === \"all\") {\n            row.checked = target.checked;\n        }\n        isAllSelected = isAllSelected && row.checked;\n        isIndeterminate = isIndeterminate || row.checked;\n        return row;\n    });\n    return {\n        data: newData,\n        isAllSelected: !!newData && isAllSelected,\n        isIndeterminate: isIndeterminate && !isAllSelected,\n    };\n}\n","export enum SortDirection {\n    ASC = \"ASC\",\n    DESC = \"DESC\",\n}\n\nexport interface FilterColumn<T = any> {\n    accessor: keyof T;\n    value: any;\n}\n\nexport type GenericTableRow<T = any> = T & {\n    id?: string;\n    checked?: boolean;\n    expanded?: boolean;\n    indeterminate?: boolean;\n};\n","export default \"import React from \\\"react\\\";\\nimport classnames from \\\"classnames\\\";\\nimport { SortedColumn, TableContext } from \\\"./TableContextProvider\\\";\\nimport \\\"./table.scss\\\";\\n\\nexport type TableTheme = \\\"light\\\" | \\\"dark\\\";\\n\\nexport type TableProps = JSX.IntrinsicElements[\\\"table\\\"] & {\\n    /** callback when row is selected */\\n    onRowSelect?: (event: React.ChangeEvent<HTMLInputElement>, rowKey: string) => void;\\n    /** callback when row is expanded */\\n    onRowExpand?: (isExpanded: boolean, rowKey: string) => void;\\n    /** table theme */\\n    theme?: TableTheme;\\n    /** callback when column is sorted */\\n    onSort?: (sortedColumn: SortedColumn) => void;\\n    /** preset sorted column */\\n    sortedColumn?: SortedColumn;\\n};\\n\\nexport const Table: React.FunctionComponent<TableProps> = React.memo(\\n    React.forwardRef(({ onRowSelect, onRowExpand, onSort, sortedColumn, theme = \\\"light\\\", className, ...props }: TableProps, ref: React.ForwardedRef<HTMLTableElement>): React.ReactElement<void> => {\\n        const [tableState, setTableState] = React.useState({ expandedRows: [], sortedColumn });\\n        return (\\n            <TableContext.Provider value={{ tableState, onSort, onRowSelect, onRowExpand, setTableState }}>\\n                <table {...props} className={classnames(\\\"table\\\", className, theme)} ref={ref} />\\n            </TableContext.Provider>\\n        );\\n    })\\n);\\n\";"],"names":["Object","defineProperty","exports","value","FORMATS","FORMAT_PLAIN","FORMAT_HTML","LINE_ENDINGS","POSIX","WIN32","SUPPORTED_PLATFORMS","DARWIN","LINUX","WORDS","obj","_words","_LoremIpsum","__esModule","_ref","arguments","length","undefined","_ref$count","count","_ref$format","format","_ref$paragraphLowerBo","paragraphLowerBound","_ref$paragraphUpperBo","paragraphUpperBound","random","_ref$sentenceLowerBou","sentenceLowerBound","_ref$sentenceUpperBou","sentenceUpperBound","_ref$units","units","_ref$words","words","_ref$suffix","suffix","options","sentencesPerParagraph","max","min","wordsPerSentence","lorem","generateParagraphs","generateSentences","generateWords","_formats","_lineEndings","_generator","_util","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","descriptor","enumerable","configurable","writable","key","_defineProperty","_default","LoremIpsum","this","indexOf","toLowerCase","Error","concat","join","generator","protoProps","staticProps","isReactNative","isNode","isWindows","str","strings","_this","map","formatString","num","generateRandomWords","generateRandomParagraph","makeString","bind","formatStrings","makeArrayOfStrings","getLineEnding","prototype","Generator","_ref$sentencesPerPara","_ref$wordsPerSentence","seed","Math","floor","_this$wordsPerSentenc","generateRandomInteger","makeArrayOfLength","reduce","accumulator","index","pluckRandomWord","trim","capitalize","_this2","_this$sentencesPerPar","generateRandomSentence","trimmed","charAt","toUpperCase","slice","get","_capitalize","_isNode","_isReactNative","_isWindows","_makeArrayOfLength","_makeArrayOfStrings","_interopRequireDefault","module","navigator","product","_platforms","process","platform","Array","apply","item","_","makeData","lens","useRowActionColumn","makeDataLevel","depth","len","arr","push","range","d","age","firstName","loremIpsum","lastName","status","subRows","rowContentDetail","className","checkDynamicFormSelectedKey","controls","checkboxes","find","importString","require","columns","label","accessor","ascendingLabel","descendingLabel","React","paginationValue","setPaginationValue","pages","setPages","pagingSize","setPagingSize","searchText","setSearchText","checked","indeterminate","selectAllIndicator","setSelectAllIndicator","dropDownListSelected","setDropdownListSelected","filterColumns","setFilterColumns","sortedColumn","setSortedColumn","useDynamicForm","items","controlType","renderControls","renderForm","state","enableSorting","enableRowSelection","enablePagination","enableSubRows","enableSearch","enableFilter","enableDark","defaultData","data","setData","handleTextChange","e","searchTextByColumns","getSortOrderLabel","column","sortDirection","SortDirection","filterArrayByColumns","paginate","Docs","mainFile","exampleTheme","example","Table","theme","onSort","newSortedColumn","sortArray","onRowSelect","event","rowUniqueKey","newData","isAllSelected","isIndeterminate","onRowExpand","isExpanded","expanded","checkboxProps","scope","Button","row","rowIndex","uniqueKey","collapseButtonProps","subIndex","sub","isSubRow","id","colSpan","NumberedPagination","start","end","onPageChange","code","Dropdown","onMultipleChange","newFilterColumns","filterIndex","findIndex","newFilter","placeholder","multiple","Textbox","name","onChange","isNaN","parseInt","note","CodeSnippet","language","ref","size","block","classnames","children","hrefMask","pageLinkProps","page","href","includes","replace","toString","Page","anchorProps","active","disabled","onClick","preventDefault","ChevronLeftIcon","width","height","viewBox","fill","xmlns","fillRule","ChevronDoubleLeftIcon","Pagination","navs","offset","useDotNav","useFirstAndLast","showFirstAndLast","firstPageLinkProps","lastPageLinkProps","nextPageLinkProps","previousPageLinkProps","total","indexOfLastItem","disablePrev","disableNext","filteredPages","childrenArray","Child","currentTarget","dataset","indexNumber","offsetToValue","valueToOffset","offsetFrom","offsetTo","filteredArray","filter","renderPages","showFirst","showLast","disableFirst","disableLast","role","dotnav","first","previous","next","last","defaultContext","tableState","expandedRows","setTableState","TableContext","Provider","TableHeaderCell","disableSort","context","sortOrder","setSortOrder","sortable","setSortable","oldSortDirection","sort","displayName","TableHeader","isHeaderRow","type","hideSelect","TableBody","parentKey","cloneTableRow","isTableRow","FragmentChild","fragmentIndex","TableCell","angleDown","angleRightIcon","TableRow","uniqueId","setUniqueId","isShown","setIsShown","setExpanded","isParentRow","setIsParentRow","columnProps","setColumnProps","setExpandedRows","initiateExpandedRows","newExpandedRows","expandedIndex","splice","randomId","Cell","collapsible","show","Checkbox","input","columnName","languages","window","firstItem","secondItem","String","localeCompare","sensitivity","ignorePunctuation","every","isArray","keyword","searchFields","some","searchColumn","result","searchField","regEx","RegExp","search","currentPage","rowUniqueAccessor","rowId"],"sourceRoot":""}