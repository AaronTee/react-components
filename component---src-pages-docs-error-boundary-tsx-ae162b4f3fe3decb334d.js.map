{"version":3,"file":"component---src-pages-docs-error-boundary-tsx-ae162b4f3fe3decb334d.js","mappings":"uNAWaA,EAAb,YACI,WAAYC,GAA4B,IAAD,SACnC,cAAMA,IAAN,MACKC,MAAQ,CAAEC,UAAU,GAFU,EAD3C,qBAMWC,yBAAP,WACI,MAAO,CAAED,UAAU,IAP3B,YAUIE,OAAA,WACI,OAAIC,KAAKJ,MAAMC,SACJG,KAAKL,MAAMM,UAGfD,KAAKL,MAAMO,UAf1B,GAAmCC,EAAAA,W,WCN7BC,EAAuBC,EAAQ,OA8BrC,EAzBoC,WAChC,OAGIC,EAAAA,EAAAA,GAAe,CACf,CACIC,IAAK,WACLC,MAAO,CAAC,CAAED,IAAK,WAAYE,MAAO,WAAYC,YAAa,gBALnDC,EADhB,EACIC,WACSC,EAFb,EAEIjB,MAASiB,SAQb,OACI,gBAACC,EAAA,EAAD,CACIC,SAAUX,EACVY,QACI,uBAAKC,UAAU,uCACX,gBAACvB,EAAD,CAAeO,UAAW,+CAAkBY,EAAShB,SAAW,2BAAM,IAAIqB,OAAiB,4CAGnGC,KAvBM,4FAwBNN,SAAU,gCAAGF,S,6BC9BzB","sources":["webpack://react-components-docs/../lib/src/ErrorBoundary/ErrorBoundary.tsx","webpack://react-components-docs/./src/pages/docs/error-boundary.tsx","webpack://react-components-docs/../lib/src/ErrorBoundary/ErrorBoundary.tsx?a9b1"],"sourcesContent":["import React from \"react\";\n\ninterface ErrorBoundaryProps {\n    /** The error view to be shown */\n    errorView: React.ReactNode;\n}\n\ninterface ErrorBoundaryState {\n    hasError: boolean;\n}\n\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    constructor(props: ErrorBoundaryProps) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    static getDerivedStateFromError() {\n        return { hasError: true };\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return this.props.errorView;\n        }\n\n        return this.props.children;\n    }\n}\n","import Docs from \"@common/Docs\";\nimport { ErrorBoundary } from \"@sebgroup/react-components/ErrorBoundary\";\nimport { useDynamicForm } from \"@sebgroup/react-components/hooks/useDynamicForm\";\nimport React from \"react\";\n\nconst importString: string = require(\"!raw-loader!@sebgroup/react-components/ErrorBoundary/ErrorBoundary\");\nconst code: string = `<ErrorBoundary errorView={<>error view</>}>\n    <div>lorem ipsum</div>\n</ErrorBoundary>`;\n\nconst ErrorBoundaryPage: React.FC = (): React.ReactElement<void> => {\n    const {\n        renderForm: renderControls,\n        state: { controls },\n    } = useDynamicForm([\n        {\n            key: \"controls\",\n            items: [{ key: \"hasError\", label: \"hasError\", controlType: \"Checkbox\" }],\n        },\n    ]);\n\n    return (\n        <Docs\n            mainFile={importString}\n            example={\n                <div className=\"w-100 d-flex justify-content-center\">\n                    <ErrorBoundary errorView={<>error view</>}>{controls.hasError ? <div>{new Error()}</div> : <div>lorem ipsum</div>}</ErrorBoundary>\n                </div>\n            }\n            code={code}\n            controls={<>{renderControls()}</>}\n        />\n    );\n};\n\nexport default ErrorBoundaryPage;\n","export default \"import React from \\\"react\\\";\\n\\ninterface ErrorBoundaryProps {\\n    /** The error view to be shown */\\n    errorView: React.ReactNode;\\n}\\n\\ninterface ErrorBoundaryState {\\n    hasError: boolean;\\n}\\n\\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\\n    constructor(props: ErrorBoundaryProps) {\\n        super(props);\\n        this.state = { hasError: false };\\n    }\\n\\n    static getDerivedStateFromError() {\\n        return { hasError: true };\\n    }\\n\\n    render() {\\n        if (this.state.hasError) {\\n            return this.props.errorView;\\n        }\\n\\n        return this.props.children;\\n    }\\n}\\n\";"],"names":["ErrorBoundary","props","state","hasError","getDerivedStateFromError","render","this","errorView","children","React","importString","require","useDynamicForm","key","items","label","controlType","renderControls","renderForm","controls","Docs","mainFile","example","className","Error","code"],"sourceRoot":""}