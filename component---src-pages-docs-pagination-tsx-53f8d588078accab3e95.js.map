{"version":3,"file":"component---src-pages-docs-pagination-tsx-53f8d588078accab3e95.js","mappings":"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","sources":["webpack://react-components-docs/./src/pages/docs/pagination.tsx","webpack://react-components-docs/../lib/src/Pagination/NumberedPagination.tsx","webpack://react-components-docs/../lib/src/Pagination/Page.tsx","webpack://react-components-docs/../lib/src/Pagination/Pagination.tsx","webpack://react-components-docs/../lib/src/Pagination/Pagination.tsx?2f74","webpack://react-components-docs/./static/icons/arrow-first-left.svg","webpack://react-components-docs/./static/icons/arrow-last-right.svg","webpack://react-components-docs/./static/icons/arrow-left-fill.svg","webpack://react-components-docs/./static/icons/arrow-right-fill.svg","webpack://react-components-docs/./static/icons/cpu.svg","webpack://react-components-docs/./static/icons/game-controller.svg"],"sourcesContent":["import React from \"react\";\nimport Docs from \"@common/Docs\";\nimport { DynamicFormOption, useDynamicForm } from \"@sebgroup/react-components/hooks/useDynamicForm\";\nimport { Pagination, Page, CustomNavs, PaginationProps } from \"@sebgroup/react-components/Pagination\";\nimport CPUIcon from \"../../../static/icons/cpu.svg\";\nimport GameControllerIcon from \"../../../static/icons/game-controller.svg\";\nimport ArrowFirstLeftIcon from \"../../../static/icons/arrow-first-left.svg\";\nimport ArrowLeftFillIcon from \"../../../static/icons/arrow-left-fill.svg\";\nimport ArrowRightFillIcon from \"../../../static/icons/arrow-right-fill.svg\";\nimport ArrowLastRightIcon from \"../../../static/icons/arrow-last-right.svg\";\n\nconst importString: string = require(\"!raw-loader!@sebgroup/react-components/Pagination/Pagination\");\nconst code: string = `<Pagination value={page} onPageChange={setPage}>\n    {[...Array(10)].map((_: undefined, i: number) => <Page href={\\'\"pages/\\${i + 1}\"\\'}>{i + 1}</Page>)}\n</Pagination>`;\n\nconst PaginationSizes: DynamicFormOption<PaginationProps[\"size\"]>[] = [\n    { key: \"sm\", label: \"sm\", value: \"sm\" },\n    { key: \"md\", label: \"md\", value: \"md\" },\n    { key: \"lg\", label: \"lg\", value: \"lg\" },\n];\nconst customPaginations: React.ReactNode[] = [\n    \"Users\",\n    \"Admins\",\n    \"üõ†\",\n    \"ü§∑‚Äç‚ôÄÔ∏è\",\n    // prettier-ignore\n    <b><i><u>Huh!</u></i></b>,\n    <CPUIcon />,\n    <GameControllerIcon />,\n];\nconst customNavs: CustomNavs = {\n    first: <ArrowFirstLeftIcon />,\n    next: <ArrowLeftFillIcon />,\n    previous: <ArrowRightFillIcon />,\n    last: <ArrowLastRightIcon />,\n};\n\nconst PaginationPage: React.FC = (): React.ReactElement<void> => {\n    const [page, setPage] = React.useState<number>(0);\n\n    const {\n        renderForm: renderControls,\n        state: { controls },\n    } = useDynamicForm([\n        {\n            key: \"controls\",\n            items: [\n                { key: \"size\", label: \"Size\", initialValue: PaginationSizes[1].value, options: PaginationSizes, controlType: \"Radio\" },\n                { key: \"offset\", min: 1, max: 10, initialValue: 5, label: \"Offset\", controlType: \"Stepper\" },\n                { key: \"useDotNav\", label: \"Use dot navigation\", initialValue: false, controlType: \"Checkbox\" },\n                {\n                    key: \"showFirstAndLast\",\n                    label: \"Show first and last buttons\",\n                    description: \"Show buttons for the first and last page when available.\",\n                    initialValue: false,\n                    controlType: \"Checkbox\",\n                },\n                {\n                    key: \"useCustomPages\",\n                    label: \"Use non numbered navigations\",\n                    description: \"You can pass anything as a pagination button. Get creative! üë®‚Äçüé®\",\n                    initialValue: false,\n                    controlType: \"Checkbox\",\n                },\n                {\n                    key: \"useCustomNavs\",\n                    label: \"Use custom navigation buttons\",\n                    description: \"You can pass custom navigation content replacing the chevron icons used by default\",\n                    initialValue: false,\n                    controlType: \"Checkbox\",\n                },\n            ],\n        },\n    ]);\n\n    return (\n        <Docs\n            mainFile={importString}\n            example={\n                <div className=\"w-100 d-flex justify-content-center\">\n                    <Pagination\n                        value={page}\n                        onPageChange={setPage}\n                        offset={controls.offset as PaginationProps[\"offset\"]}\n                        size={controls.size as PaginationProps[\"size\"]}\n                        useDotNav={controls.useDotNav as PaginationProps[\"useDotNav\"]}\n                        showFirstAndLast={controls.showFirstAndLast as PaginationProps[\"showFirstAndLast\"]}\n                        navs={controls.useCustomNavs ? customNavs : null}\n                        aria-label=\"Pagination example\"\n                        firstPageLinkProps={{ \"aria-label\": \"First page\" }}\n                        lastPageLinkProps={{ \"aria-label\": \"Last page\" }}\n                        nextPageLinkProps={{ \"aria-label\": \"Next page\" }}\n                        previousPageLinkProps={{ \"aria-label\": \"Previous page\" }}\n                    >\n                        {(controls.useCustomPages ? customPaginations : [...Array(10)]).map((_: undefined, i: number) => (\n                            <Page key={i} href={`/pages/${i + 1}`} anchorProps={{ \"aria-label\": `${page === i ? \"Current page:\" : \"Go to page\"} ${i + 1}` }}>\n                                {controls.useCustomPages ? _ : i + 1}\n                            </Page>\n                        ))}\n                    </Pagination>\n                </div>\n            }\n            code={code}\n            controls={renderControls()}\n            note={\n                <div>\n                    <h4>Pagination offset</h4>\n                    <p>\n                        Pagination offset is the maximum number of pagination buttons to be shown at a time. For example, if you have 10 pages and you set the offset to 5 (default) then only 5\n                        pagination buttons will be shown with an indicator that there are more pages to view. The offset <u>can only be an odd number</u> because when the user navigates between the\n                        pages, the pagination needs to show the current page which usually gets centered inside the pagination component.\n                    </p>\n\n                    <br />\n\n                    <h4>Numbered pagination</h4>\n                    <p>\n                        You can compose an numbered pagination easily using an array of numbers. However, we have exposed a helper component called <code>NumberedPagination</code>.\n                    </p>\n                </div>\n            }\n        />\n    );\n};\n\nexport default PaginationPage;\n","import React from \"react\";\nimport { Pagination, PaginationProps } from \"./Pagination\";\nimport { Page, PageProps } from \"./Page\";\n\nexport interface NumberedPagesProps extends PaginationProps {\n    /** The number of the first item */\n    start?: number;\n    /** The number of the last item */\n    end: number;\n    /** A string mask representing the generic href syntax that include `$i` that would be replaced by the page number automatically */\n    hrefMask?: string;\n    /** Page link props */\n    pageLinkProps?: PageProps;\n}\n\nexport const NumberedPagination: React.FC<NumberedPagesProps> = React.memo(\n    React.forwardRef(({ start = 1, end, hrefMask, pageLinkProps, ...props }: NumberedPagesProps, ref: React.ForwardedRef<HTMLElement>) => {\n        const [pages, setPages] = React.useState<number[]>([]);\n\n        React.useEffect(() => {\n            const arr: number[] = [];\n\n            for (let i: number = start; i <= end; i++) {\n                arr.push(i);\n            }\n\n            setPages(arr);\n        }, [start, end]);\n\n        return (\n            <Pagination {...props} ref={ref}>\n                {pages.map((page: number, index: number) => (\n                    <Page {...pageLinkProps} key={index} href={hrefMask?.includes(\"$i\") ? hrefMask.replace(\"$i\", page.toString()) : null}>\n                        {page}\n                    </Page>\n                ))}\n            </Pagination>\n        );\n    })\n);\n\nexport default NumberedPagination;\n","import React from \"react\";\nimport classnames from \"classnames\";\n\nexport type PageProps = JSX.IntrinsicElements[\"li\"] & {\n    /** The page's link. This is used to allow the user to open the page in a new browser tab. */\n    href?: string;\n    /** Anchor element properties */\n    anchorProps?: JSX.IntrinsicElements[\"a\"];\n};\n\nexport const Page: React.FC<PageProps> = React.memo(\n    React.forwardRef(({ href, anchorProps, ...props }: PageProps, ref: React.ForwardedRef<HTMLLIElement>) => {\n        return (\n            <li {...props} ref={ref} className={classnames(\"page-item\", { active: props[\"data-active\"], disabled: props[\"data-disabled\"] }, props.className)}>\n                <a {...anchorProps} className=\"page-link\" href={href || \"#\"} onClick={(e) => e.preventDefault()} aria-disabled={props[\"data-disabled\"]}>\n                    {props.children}\n                </a>\n            </li>\n        );\n    })\n);\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { Page, PageProps } from \"./Page\";\nimport \"./pagination.scss\";\n\nconst ChevronLeftIcon: JSX.Element = (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" d=\"M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\" />\n    </svg>\n);\nconst ChevronDoubleLeftIcon: JSX.Element = (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" d=\"M8.354 1.646a.5.5 0 0 1 0 .708L2.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\" />\n        <path fillRule=\"evenodd\" d=\"M12.354 1.646a.5.5 0 0 1 0 .708L6.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\" />\n    </svg>\n);\n\nexport interface CustomNavs {\n    next?: React.ReactNode;\n    previous?: React.ReactNode;\n    last?: React.ReactNode;\n    first?: React.ReactNode;\n}\n\nexport type PaginationSize = \"sm\" | \"md\" | \"lg\";\n\nexport type PaginationProps = JSX.IntrinsicElements[\"nav\"] & {\n    /** Override navigation buttons */\n    navs?: CustomNavs;\n    /** The maximum number of pagination buttons to show. Default is 10 */\n    offset?: number;\n    /** On value change handler */\n    onPageChange?: (index: number) => void;\n    /** The size of the buttons. Available sizes: \"sm\", \"md\", \"lg\". Default is \"md\" */\n    size?: PaginationSize;\n    /** Use dot-navigation */\n    useDotNav?: boolean;\n    /** Shows first and last buttons  */\n    showFirstAndLast?: boolean;\n    /** The index of the current page. The index is based on the children rendered starting from 0. */\n    value?: number;\n    /** First page link props */\n    firstPageLinkProps?: PageProps;\n    /** Last page link props */\n    lastPageLinkProps?: PageProps;\n    /** Next page link props */\n    nextPageLinkProps?: PageProps;\n    /** Previous page link props */\n    previousPageLinkProps?: PageProps;\n};\n\nexport const Pagination: React.FunctionComponent<PaginationProps> = React.memo(\n    React.forwardRef(\n        (\n            {\n                navs = {},\n                offset = 5,\n                onPageChange,\n                size = \"md\",\n                useDotNav,\n                showFirstAndLast: useFirstAndLast,\n                value = 0,\n                firstPageLinkProps = {},\n                lastPageLinkProps = {},\n                nextPageLinkProps = {},\n                previousPageLinkProps = {},\n                ...props\n            }: PaginationProps,\n            ref: React.ForwardedRef<HTMLElement>\n        ) => {\n            const total: number = React.Children.count(props.children);\n            const indexOfLastItem: number = total - 1;\n            const disablePrev: boolean = total < 2 || value === 0;\n            const disableNext: boolean = total < 2 || value === indexOfLastItem;\n\n            const renderPages = (): React.ReactElement[] => {\n                const childrenArray: React.ReactElement[] =\n                    React.Children.map(props.children, (Child: React.ReactElement<PageProps>, i: number) => {\n                        const anchorProps: JSX.IntrinsicElements[\"a\"] = { \"aria-current\": value === i };\n                        return React.isValidElement<PageProps>(Child)\n                            ? React.cloneElement<any>(Child, {\n                                  \"data-active\": value === i,\n                                  \"data-index-number\": i,\n                                  key: i,\n                                  anchorProps: Child.props.anchorProps ? { ...Child.props.anchorProps, ...anchorProps } : anchorProps,\n                                  onClick: (e: React.MouseEvent<HTMLLIElement>) => {\n                                      onPageChange && onPageChange(parseInt(e.currentTarget.dataset.indexNumber, 10));\n                                  },\n                              })\n                            : Child;\n                    }) || [];\n\n                if (offset) {\n                    /** The distance between the current value and the offset from the left. Example: ...üëâ|3|4|üëà|(5)|6|7|... */\n                    const offsetToValue: number = value - Math.floor(offset / 2);\n                    /** The distance between the current value and the offset from the right. Example: ...|3|4|(5)|üëâ|6|7|üëà... */\n                    const valueToOffset: number = value + Math.floor(offset / 2);\n\n                    let offsetFrom: number = offsetToValue;\n                    let offsetTo: number = valueToOffset;\n\n                    if (offsetToValue < 0) {\n                        offsetTo += 0 - offsetToValue;\n                        offsetTo = offsetTo > indexOfLastItem ? indexOfLastItem : offsetTo;\n                    }\n                    if (valueToOffset > indexOfLastItem) {\n                        offsetFrom -= valueToOffset - indexOfLastItem;\n                        offsetFrom = offsetFrom < 0 ? 0 : offsetFrom;\n                    }\n\n                    let filteredArray: React.ReactElement[] = childrenArray.filter((_: any, i: number) => i >= offsetFrom && i <= offsetTo);\n\n                    if (!useDotNav) {\n                        if (parseInt(filteredArray[0]?.props[\"data-index-number\"], 10) > 0) {\n                            filteredArray = [\n                                <Page className=\"pre-ellipsis\" key=\"pre-ellipsis\" data-disabled href={props.children[0]?.props?.href}>\n                                    ...\n                                </Page>,\n                                ...filteredArray,\n                            ];\n                        }\n                        if (parseInt(filteredArray[filteredArray.length - 1]?.props[\"data-index-number\"], 10) < indexOfLastItem) {\n                            filteredArray.push(\n                                <Page className=\"post-ellipsis\" key=\"post-ellipsis\" data-index-number={indexOfLastItem} data-disabled>\n                                    ...\n                                </Page>\n                            );\n                        }\n                    }\n                    return filteredArray;\n                } else {\n                    return childrenArray;\n                }\n            };\n\n            const filteredPages = renderPages();\n\n            const showFirst: boolean = (useFirstAndLast && !useDotNav) || (useDotNav && !disablePrev && filteredPages[0].props[\"data-index-number\"] != 0);\n            const showLast: boolean = (useFirstAndLast && !useDotNav) || (useDotNav && !disableNext && filteredPages[filteredPages.length - 1].props[\"data-index-number\"] != indexOfLastItem);\n            const disableFirst: boolean = disablePrev || filteredPages[0].key !== \"pre-ellipsis\";\n            const disableLast: boolean = disableNext || filteredPages[filteredPages.length - 1].key !== \"post-ellipsis\";\n\n            return (\n                <nav {...props} role=\"navigation\" ref={ref} className={classnames(\"rc\", props.className)}>\n                    <ul className={classnames(\"pagination\", { [`pagination-${size}`]: size, dotnav: useDotNav })}>\n                        {props.children && (\n                            <>\n                                {showFirst && (\n                                    <Page\n                                        {...firstPageLinkProps}\n                                        className=\"first-nav\"\n                                        onClick={() => !disableFirst && onPageChange(0)}\n                                        data-disabled={disableFirst}\n                                        href={props.children[0]?.props?.href}\n                                    >\n                                        {navs?.first || ChevronDoubleLeftIcon}\n                                    </Page>\n                                )}\n                                {!useDotNav && (\n                                    <Page\n                                        {...previousPageLinkProps}\n                                        className=\"previous-nav\"\n                                        onClick={() => !disablePrev && onPageChange(value - 1)}\n                                        data-disabled={disablePrev}\n                                        href={props.children[value - 1]?.props?.href}\n                                    >\n                                        {navs?.previous || ChevronLeftIcon}\n                                    </Page>\n                                )}\n\n                                {filteredPages}\n\n                                {!useDotNav && (\n                                    <Page\n                                        {...nextPageLinkProps}\n                                        className=\"next-nav\"\n                                        onClick={() => !disableNext && onPageChange(value + 1)}\n                                        data-disabled={disableNext}\n                                        href={props.children[value + 1]?.props?.href}\n                                    >\n                                        {navs?.next || React.cloneElement(ChevronLeftIcon, { className: \"h-flipped\" })}\n                                    </Page>\n                                )}\n                                {showLast && (\n                                    <Page\n                                        {...lastPageLinkProps}\n                                        className=\"last-nav\"\n                                        onClick={() => !disableLast && onPageChange(indexOfLastItem)}\n                                        data-disabled={disableLast}\n                                        href={props.children[indexOfLastItem]?.props?.href}\n                                    >\n                                        {navs?.last || React.cloneElement(ChevronDoubleLeftIcon, { className: \"h-flipped\" })}\n                                    </Page>\n                                )}\n                            </>\n                        )}\n                    </ul>\n                </nav>\n            );\n        }\n    )\n);\n","export default \"import React from \\\"react\\\";\\nimport classnames from \\\"classnames\\\";\\nimport { Page, PageProps } from \\\"./Page\\\";\\nimport \\\"./pagination.scss\\\";\\n\\nconst ChevronLeftIcon: JSX.Element = (\\n    <svg width=\\\"1em\\\" height=\\\"1em\\\" viewBox=\\\"0 0 16 16\\\" fill=\\\"currentColor\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n        <path fillRule=\\\"evenodd\\\" d=\\\"M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\\\" />\\n    </svg>\\n);\\nconst ChevronDoubleLeftIcon: JSX.Element = (\\n    <svg width=\\\"1em\\\" height=\\\"1em\\\" viewBox=\\\"0 0 16 16\\\" fill=\\\"currentColor\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n        <path fillRule=\\\"evenodd\\\" d=\\\"M8.354 1.646a.5.5 0 0 1 0 .708L2.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\\\" />\\n        <path fillRule=\\\"evenodd\\\" d=\\\"M12.354 1.646a.5.5 0 0 1 0 .708L6.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\\\" />\\n    </svg>\\n);\\n\\nexport interface CustomNavs {\\n    next?: React.ReactNode;\\n    previous?: React.ReactNode;\\n    last?: React.ReactNode;\\n    first?: React.ReactNode;\\n}\\n\\nexport type PaginationSize = \\\"sm\\\" | \\\"md\\\" | \\\"lg\\\";\\n\\nexport type PaginationProps = JSX.IntrinsicElements[\\\"nav\\\"] & {\\n    /** Override navigation buttons */\\n    navs?: CustomNavs;\\n    /** The maximum number of pagination buttons to show. Default is 10 */\\n    offset?: number;\\n    /** On value change handler */\\n    onPageChange?: (index: number) => void;\\n    /** The size of the buttons. Available sizes: \\\"sm\\\", \\\"md\\\", \\\"lg\\\". Default is \\\"md\\\" */\\n    size?: PaginationSize;\\n    /** Use dot-navigation */\\n    useDotNav?: boolean;\\n    /** Shows first and last buttons  */\\n    showFirstAndLast?: boolean;\\n    /** The index of the current page. The index is based on the children rendered starting from 0. */\\n    value?: number;\\n    /** First page link props */\\n    firstPageLinkProps?: PageProps;\\n    /** Last page link props */\\n    lastPageLinkProps?: PageProps;\\n    /** Next page link props */\\n    nextPageLinkProps?: PageProps;\\n    /** Previous page link props */\\n    previousPageLinkProps?: PageProps;\\n};\\n\\nexport const Pagination: React.FunctionComponent<PaginationProps> = React.memo(\\n    React.forwardRef(\\n        (\\n            {\\n                navs = {},\\n                offset = 5,\\n                onPageChange,\\n                size = \\\"md\\\",\\n                useDotNav,\\n                showFirstAndLast: useFirstAndLast,\\n                value = 0,\\n                firstPageLinkProps = {},\\n                lastPageLinkProps = {},\\n                nextPageLinkProps = {},\\n                previousPageLinkProps = {},\\n                ...props\\n            }: PaginationProps,\\n            ref: React.ForwardedRef<HTMLElement>\\n        ) => {\\n            const total: number = React.Children.count(props.children);\\n            const indexOfLastItem: number = total - 1;\\n            const disablePrev: boolean = total < 2 || value === 0;\\n            const disableNext: boolean = total < 2 || value === indexOfLastItem;\\n\\n            const renderPages = (): React.ReactElement[] => {\\n                const childrenArray: React.ReactElement[] =\\n                    React.Children.map(props.children, (Child: React.ReactElement<PageProps>, i: number) => {\\n                        const anchorProps: JSX.IntrinsicElements[\\\"a\\\"] = { \\\"aria-current\\\": value === i };\\n                        return React.isValidElement<PageProps>(Child)\\n                            ? React.cloneElement<any>(Child, {\\n                                  \\\"data-active\\\": value === i,\\n                                  \\\"data-index-number\\\": i,\\n                                  key: i,\\n                                  anchorProps: Child.props.anchorProps ? { ...Child.props.anchorProps, ...anchorProps } : anchorProps,\\n                                  onClick: (e: React.MouseEvent<HTMLLIElement>) => {\\n                                      onPageChange && onPageChange(parseInt(e.currentTarget.dataset.indexNumber, 10));\\n                                  },\\n                              })\\n                            : Child;\\n                    }) || [];\\n\\n                if (offset) {\\n                    /** The distance between the current value and the offset from the left. Example: ...üëâ|3|4|üëà|(5)|6|7|... */\\n                    const offsetToValue: number = value - Math.floor(offset / 2);\\n                    /** The distance between the current value and the offset from the right. Example: ...|3|4|(5)|üëâ|6|7|üëà... */\\n                    const valueToOffset: number = value + Math.floor(offset / 2);\\n\\n                    let offsetFrom: number = offsetToValue;\\n                    let offsetTo: number = valueToOffset;\\n\\n                    if (offsetToValue < 0) {\\n                        offsetTo += 0 - offsetToValue;\\n                        offsetTo = offsetTo > indexOfLastItem ? indexOfLastItem : offsetTo;\\n                    }\\n                    if (valueToOffset > indexOfLastItem) {\\n                        offsetFrom -= valueToOffset - indexOfLastItem;\\n                        offsetFrom = offsetFrom < 0 ? 0 : offsetFrom;\\n                    }\\n\\n                    let filteredArray: React.ReactElement[] = childrenArray.filter((_: any, i: number) => i >= offsetFrom && i <= offsetTo);\\n\\n                    if (!useDotNav) {\\n                        if (parseInt(filteredArray[0]?.props[\\\"data-index-number\\\"], 10) > 0) {\\n                            filteredArray = [\\n                                <Page className=\\\"pre-ellipsis\\\" key=\\\"pre-ellipsis\\\" data-disabled href={props.children[0]?.props?.href}>\\n                                    ...\\n                                </Page>,\\n                                ...filteredArray,\\n                            ];\\n                        }\\n                        if (parseInt(filteredArray[filteredArray.length - 1]?.props[\\\"data-index-number\\\"], 10) < indexOfLastItem) {\\n                            filteredArray.push(\\n                                <Page className=\\\"post-ellipsis\\\" key=\\\"post-ellipsis\\\" data-index-number={indexOfLastItem} data-disabled>\\n                                    ...\\n                                </Page>\\n                            );\\n                        }\\n                    }\\n                    return filteredArray;\\n                } else {\\n                    return childrenArray;\\n                }\\n            };\\n\\n            const filteredPages = renderPages();\\n\\n            const showFirst: boolean = (useFirstAndLast && !useDotNav) || (useDotNav && !disablePrev && filteredPages[0].props[\\\"data-index-number\\\"] != 0);\\n            const showLast: boolean = (useFirstAndLast && !useDotNav) || (useDotNav && !disableNext && filteredPages[filteredPages.length - 1].props[\\\"data-index-number\\\"] != indexOfLastItem);\\n            const disableFirst: boolean = disablePrev || filteredPages[0].key !== \\\"pre-ellipsis\\\";\\n            const disableLast: boolean = disableNext || filteredPages[filteredPages.length - 1].key !== \\\"post-ellipsis\\\";\\n\\n            return (\\n                <nav {...props} role=\\\"navigation\\\" ref={ref} className={classnames(\\\"rc\\\", props.className)}>\\n                    <ul className={classnames(\\\"pagination\\\", { [`pagination-${size}`]: size, dotnav: useDotNav })}>\\n                        {props.children && (\\n                            <>\\n                                {showFirst && (\\n                                    <Page\\n                                        {...firstPageLinkProps}\\n                                        className=\\\"first-nav\\\"\\n                                        onClick={() => !disableFirst && onPageChange(0)}\\n                                        data-disabled={disableFirst}\\n                                        href={props.children[0]?.props?.href}\\n                                    >\\n                                        {navs?.first || ChevronDoubleLeftIcon}\\n                                    </Page>\\n                                )}\\n                                {!useDotNav && (\\n                                    <Page\\n                                        {...previousPageLinkProps}\\n                                        className=\\\"previous-nav\\\"\\n                                        onClick={() => !disablePrev && onPageChange(value - 1)}\\n                                        data-disabled={disablePrev}\\n                                        href={props.children[value - 1]?.props?.href}\\n                                    >\\n                                        {navs?.previous || ChevronLeftIcon}\\n                                    </Page>\\n                                )}\\n\\n                                {filteredPages}\\n\\n                                {!useDotNav && (\\n                                    <Page\\n                                        {...nextPageLinkProps}\\n                                        className=\\\"next-nav\\\"\\n                                        onClick={() => !disableNext && onPageChange(value + 1)}\\n                                        data-disabled={disableNext}\\n                                        href={props.children[value + 1]?.props?.href}\\n                                    >\\n                                        {navs?.next || React.cloneElement(ChevronLeftIcon, { className: \\\"h-flipped\\\" })}\\n                                    </Page>\\n                                )}\\n                                {showLast && (\\n                                    <Page\\n                                        {...lastPageLinkProps}\\n                                        className=\\\"last-nav\\\"\\n                                        onClick={() => !disableLast && onPageChange(indexOfLastItem)}\\n                                        data-disabled={disableLast}\\n                                        href={props.children[indexOfLastItem]?.props?.href}\\n                                    >\\n                                        {navs?.last || React.cloneElement(ChevronDoubleLeftIcon, { className: \\\"h-flipped\\\" })}\\n                                    </Page>\\n                                )}\\n                            </>\\n                        )}\\n                    </ul>\\n                </nav>\\n            );\\n        }\\n    )\\n);\\n\";","var React = require('react');\n\nfunction ArrowFirstLeft (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"fillRule\":\"evenodd\",\"d\":\"M11.854 3.646a.5.5 0 0 1 0 .708L8.207 8l3.647 3.646a.5.5 0 0 1-.708.708l-4-4a.5.5 0 0 1 0-.708l4-4a.5.5 0 0 1 .708 0zM4.5 1a.5.5 0 0 0-.5.5v13a.5.5 0 0 0 1 0v-13a.5.5 0 0 0-.5-.5z\"}));\n}\n\nArrowFirstLeft.defaultProps = {\"width\":\"16\",\"height\":\"16\",\"fill\":\"currentColor\",\"viewBox\":\"0 0 16 16\"};\n\nmodule.exports = ArrowFirstLeft;\n\nArrowFirstLeft.default = ArrowFirstLeft;\n","var React = require('react');\n\nfunction ArrowLastRight (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"fillRule\":\"evenodd\",\"d\":\"M4.146 3.646a.5.5 0 0 0 0 .708L7.793 8l-3.647 3.646a.5.5 0 0 0 .708.708l4-4a.5.5 0 0 0 0-.708l-4-4a.5.5 0 0 0-.708 0zM11.5 1a.5.5 0 0 1 .5.5v13a.5.5 0 0 1-1 0v-13a.5.5 0 0 1 .5-.5z\"}));\n}\n\nArrowLastRight.defaultProps = {\"width\":\"16\",\"height\":\"16\",\"fill\":\"currentColor\",\"viewBox\":\"0 0 16 16\"};\n\nmodule.exports = ArrowLastRight;\n\nArrowLastRight.default = ArrowLastRight;\n","var React = require('react');\n\nfunction ArrowLeftFill (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M12.14 8.753l-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z\"}));\n}\n\nArrowLeftFill.defaultProps = {\"width\":\"16\",\"height\":\"16\",\"fill\":\"currentColor\",\"viewBox\":\"0 0 16 16\"};\n\nmodule.exports = ArrowLeftFill;\n\nArrowLeftFill.default = ArrowLeftFill;\n","var React = require('react');\n\nfunction ArrowRightFill (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M3.86 8.753l5.482 4.796c.646.566 1.658.106 1.658-.753V3.204a1 1 0 0 0-1.659-.753l-5.48 4.796a1 1 0 0 0 0 1.506z\"}));\n}\n\nArrowRightFill.defaultProps = {\"width\":\"16\",\"height\":\"16\",\"fill\":\"currentColor\",\"viewBox\":\"0 0 16 16\"};\n\nmodule.exports = ArrowRightFill;\n\nArrowRightFill.default = ArrowRightFill;\n","var React = require('react');\n\nfunction Cpu (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"fillRule\":\"evenodd\",\"d\":\"M5.5.5a.5.5 0 0 0-1 0V2A2.5 2.5 0 0 0 2 4.5H.5a.5.5 0 0 0 0 1H2v1H.5a.5.5 0 0 0 0 1H2v1H.5a.5.5 0 0 0 0 1H2v1H.5a.5.5 0 0 0 0 1H2A2.5 2.5 0 0 0 4.5 14v1.5a.5.5 0 0 0 1 0V14h1v1.5a.5.5 0 0 0 1 0V14h1v1.5a.5.5 0 0 0 1 0V14h1v1.5a.5.5 0 0 0 1 0V14a2.5 2.5 0 0 0 2.5-2.5h1.5a.5.5 0 0 0 0-1H14v-1h1.5a.5.5 0 0 0 0-1H14v-1h1.5a.5.5 0 0 0 0-1H14v-1h1.5a.5.5 0 0 0 0-1H14A2.5 2.5 0 0 0 11.5 2V.5a.5.5 0 0 0-1 0V2h-1V.5a.5.5 0 0 0-1 0V2h-1V.5a.5.5 0 0 0-1 0V2h-1V.5zm1 4.5A1.5 1.5 0 0 0 5 6.5v3A1.5 1.5 0 0 0 6.5 11h3A1.5 1.5 0 0 0 11 9.5v-3A1.5 1.5 0 0 0 9.5 5h-3zm0 1a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5h-3z\"}));\n}\n\nCpu.defaultProps = {\"width\":\"1em\",\"height\":\"1em\",\"fill\":\"currentColor\",\"viewBox\":\"0 0 16 16\"};\n\nmodule.exports = Cpu;\n\nCpu.default = Cpu;\n","var React = require('react');\n\nfunction GameController (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"fillRule\":\"evenodd\",\"d\":\"M11.119 2.693c.904.19 1.75.495 2.235.98.407.408.779 1.05 1.094 1.772.32.733.599 1.591.805 2.466.206.875.34 1.78.364 2.606.024.815-.059 1.602-.328 2.21a1.42 1.42 0 0 1-1.445.83c-.636-.067-1.115-.394-1.513-.773a11.307 11.307 0 0 1-.739-.809c-.126-.147-.25-.291-.368-.422-.728-.804-1.597-1.527-3.224-1.527-1.627 0-2.496.723-3.224 1.527-.119.131-.242.275-.368.422-.243.283-.494.576-.739.81-.398.378-.877.705-1.513.772a1.42 1.42 0 0 1-1.445-.83c-.27-.608-.352-1.395-.329-2.21.024-.826.16-1.73.365-2.606.206-.875.486-1.733.805-2.466.315-.722.687-1.364 1.094-1.772.486-.485 1.331-.79 2.235-.98.932-.196 2.03-.292 3.119-.292 1.089 0 2.187.096 3.119.292zm-6.032.979c-.877.185-1.469.443-1.733.708-.276.276-.587.783-.885 1.465a13.748 13.748 0 0 0-.748 2.295 12.351 12.351 0 0 0-.339 2.406c-.022.755.062 1.368.243 1.776a.42.42 0 0 0 .426.24c.327-.034.61-.199.929-.502.212-.202.4-.423.615-.674.133-.156.276-.323.44-.505C4.861 9.97 5.978 9.026 8 9.026s3.139.943 3.965 1.855c.164.182.307.35.44.505.214.25.403.472.615.674.318.303.601.468.929.503a.42.42 0 0 0 .426-.241c.18-.408.265-1.02.243-1.776a12.354 12.354 0 0 0-.339-2.406 13.753 13.753 0 0 0-.748-2.295c-.298-.682-.61-1.19-.885-1.465-.264-.265-.856-.523-1.733-.708-.85-.179-1.877-.27-2.913-.27-1.036 0-2.063.091-2.913.27z\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M11.5 6.026a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0zm-1 1a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0zm2 0a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0zm-1 1a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0zm-7-2.5h1v3h-1v-3z\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M3.5 6.526h3v1h-3v-1zM3.051 3.26a.5.5 0 0 1 .354-.613l1.932-.518a.5.5 0 0 1 .258.966l-1.932.518a.5.5 0 0 1-.612-.354zm9.976 0a.5.5 0 0 0-.353-.613l-1.932-.518a.5.5 0 1 0-.259.966l1.932.518a.5.5 0 0 0 .612-.354z\",\"key\":2})]);\n}\n\nGameController.defaultProps = {\"width\":\"1em\",\"height\":\"1em\",\"fill\":\"currentColor\",\"viewBox\":\"0 0 16 16\"};\n\nmodule.exports = GameController;\n\nGameController.default = GameController;\n"],"names":["importString","require","PaginationSizes","key","label","value","customPaginations","customNavs","first","next","previous","last","React","page","setPage","useDynamicForm","items","initialValue","options","controlType","min","max","description","renderControls","renderForm","controls","state","Docs","mainFile","example","className","Pagination","onPageChange","offset","size","useDotNav","showFirstAndLast","navs","useCustomNavs","firstPageLinkProps","lastPageLinkProps","nextPageLinkProps","previousPageLinkProps","useCustomPages","Array","map","_","i","Page","href","anchorProps","code","note","NumberedPagination","ref","start","end","hrefMask","pageLinkProps","props","pages","setPages","arr","push","index","includes","replace","toString","classnames","active","disabled","onClick","e","preventDefault","children","ChevronLeftIcon","width","height","viewBox","fill","xmlns","fillRule","d","ChevronDoubleLeftIcon","useFirstAndLast","total","indexOfLastItem","disablePrev","disableNext","filteredPages","childrenArray","Child","parseInt","currentTarget","dataset","indexNumber","offsetToValue","Math","floor","valueToOffset","offsetFrom","offsetTo","filteredArray","filter","length","renderPages","showFirst","showLast","disableFirst","disableLast","role","dotnav","ArrowFirstLeft","createElement","defaultProps","module","exports","default","ArrowLastRight","ArrowLeftFill","ArrowRightFill","Cpu","GameController"],"sourceRoot":""}