{"version":3,"file":"c6d86727830e74548d7db3801a0d5cc06a509dfb-4af591b450c59708fdfa.js","mappings":"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","sources":["webpack://react-components-docs/../node_modules/@sebgroup/frontend-tools/randomId/index.js","webpack://react-components-docs/../node_modules/@sebgroup/frontend-tools/randomId/randomId.js","webpack://react-components-docs/../node_modules/classnames/index.js","webpack://react-components-docs/./src/components/Footer.tsx","webpack://react-components-docs/./src/components/VersionsDropdown.tsx","webpack://react-components-docs/./src/configs.ts","webpack://react-components-docs/./src/hooks/useIsMobile.ts","webpack://react-components-docs/../lib/src/CloseButton/CloseButton.tsx","webpack://react-components-docs/../lib/src/Dropdown/CustomDropdownItem.tsx","webpack://react-components-docs/../node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js","webpack://react-components-docs/../lib/src/Dropdown/Dropdown.tsx","webpack://react-components-docs/../lib/src/FeedbackIndicator/FeedbackIndicator.tsx","webpack://react-components-docs/../lib/src/Textbox/Textbox.tsx","webpack://react-components-docs/../lib/src/utils/keyboardHelper.ts","webpack://react-components-docs/./static/icons/external-link.svg","webpack://react-components-docs/../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar randomId = require('./randomId.js');\n\nexports.randomId = randomId.randomId;","'use strict';\n\nrequire(\"core-js/modules/es.date.to-string.js\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n/**\r\n * Generates a random unique ID\r\n * @param {string} seed A seed to be inserted to the random ID to ensure further uniqueness\r\n * @returns {string} The generated random ID\r\n */\n\nfunction randomId(seed) {\n  return seed + String(Math.random() * 1000 + new Date().getTime());\n}\n\nexports.randomId = randomId;","require(\"core-js/modules/es.date.to-string.js\");\n\n/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg)) {\n        if (arg.length) {\n          var inner = classNames.apply(null, arg);\n\n          if (inner) {\n            classes.push(inner);\n          }\n        }\n      } else if (argType === 'object') {\n        if (arg.toString === Object.prototype.toString) {\n          for (var key in arg) {\n            if (hasOwn.call(arg, key) && arg[key]) {\n              classes.push(key);\n            }\n          }\n        } else {\n          classes.push(arg.toString());\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames[\"default\"] = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import React from \"react\";\nimport \"../styles/footer.scss\";\n\nexport const Footer: React.FC = React.memo(() => {\n    return (\n        <footer className=\"container\">\n            <nav className=\"navbar\">\n                <div className=\"navbar-brand\">\n                    Developed with ❤️ by <a href=\"https://seb.se\" target=\"_blank\" rel=\"noreferrer noopener nofollow\"></a>\n                </div>\n                <div className=\"navbar-text\">\n                    <a href=\"https://www.npmjs.com/package/@sebgroup/ng-components/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\" title=\"View in npm\">\n                        <img src=\"https://img.shields.io/npm/v/@sebgroup/react-components\" alt=\"npm version\" />\n                    </a>\n                </div>\n            </nav>\n        </footer>\n    );\n});\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { Dropdown } from \"@sebgroup/react-components/Dropdown\";\nimport { withPrefix } from \"gatsby-link\";\nimport \"../styles/versions-dropdown.scss\";\nconst versions = require(\"../assets/jsons/versions.json\").include;\n\ninterface VersionItem {\n    name: string;\n}\ninterface FormattedVersionItem {\n    value: string;\n    label: string;\n}\n\nexport interface VersionsDropdownProps {\n    className?: string;\n}\n\nconst VersionsDropdown: React.FC<React.PropsWithChildren<VersionsDropdownProps>> = (props: VersionsDropdownProps) => {\n    const [currentVersion, setCurrentVersion] = React.useState<string>(\"\");\n    const [formattedList, setFormattedList] = React.useState<Array<FormattedVersionItem>>([]);\n\n    /** format dropdown list */\n    const formatList = () => {\n        setFormattedList(\n            versions?.length > 0\n                ? versions.map((item: VersionItem) => ({\n                      value: item.name,\n                      label: item.name.replace(/[^.]+$/, \"x\"),\n                  }))\n                : []\n        );\n    };\n\n    React.useEffect(() => {\n        const currentpath: string = window.location.href;\n        const regex: RegExp = new RegExp(\"v(\\\\d+\\\\.)(\\\\d+\\\\.)(\\\\d)(-(beta|alpha)(\\\\.\\\\d))?\", \"g\");\n        const matchedVersions: Array<string> = currentpath.match(regex);\n        setCurrentVersion(matchedVersions?.length > 0 ? matchedVersions[0] : versions[0].name);\n        formatList();\n    }, []);\n\n    return (\n        <Dropdown\n            wrapperProps={{ className: classnames(\"version-dropdown\", props.className) }}\n            value={currentVersion}\n            selectedLabel={(value: string) => formattedList.find((item: FormattedVersionItem) => item.value === value)?.label}\n            onChange={(e: React.ChangeEvent<HTMLSelectElement>) => (window.location.href = `${window.location.origin}${withPrefix(e.target.value)}/`)}\n        >\n            {formattedList.map((item: FormattedVersionItem, index: number) => (\n                <option key={index} value={item.value}>\n                    {item.label}\n                </option>\n            ))}\n        </Dropdown>\n    );\n};\n\nexport default VersionsDropdown;\n","const pkg = require(\"../package.json\");\n\nexport const urls: NavsURLs = {\n    releases: \"https://github.com/sebgroup/react-components/releases\",\n    github: \"https://github.com/sebgroup/react-components/\",\n    contribute: \"https://github.com/sebgroup/react-components/blob/alpha/CONTRIBUTING.md\",\n    issues: \"https://github.com/sebgroup/react-components/issues\",\n    v4: \"/v4/index.html\",\n};\n\nconst imageUrl: string = `${pkg.homepage}/site-preview.png`;\nconst siteName: string = \"SEB React Components\";\n\nexport const metaConfigs: MetaConfig = {\n    keywords: \"SEB, React, react components, typescript, mobile, web, ui, ux, open source, components\",\n    siteUrl: pkg.homepage,\n    description: pkg.description,\n    title: siteName,\n    sitePreviewImageUrl: imageUrl,\n    jsonLD: {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebApplication\",\n        name: siteName,\n        description: pkg.description,\n        url: pkg.homepage,\n        image: imageUrl,\n        screenshot: imageUrl,\n        applicationCategory: \"Software Documentation\",\n        operatingSystem: \"Android, Chrome OS, iOS, iPadOS, macOS, OS X, Linux, Windows\",\n        author: {\n            \"@type\": \"Organization\",\n            name: \"SEB\",\n            description: \"SEB is a Swedish financial group for corporate customers, institutions and private individuals with headquarters in Stockholm\",\n            url: \"https://seb.se\",\n            logo: \"https://seb.se/Static/Images/SebLogo.svg\",\n        },\n    },\n};\n","import { useState, useEffect } from \"react\";\n\nexport function useIsMobile(): boolean {\n    if (typeof window !== \"undefined\") {\n        const mobileQuery: string = \"(max-width: 767px)\";\n        const mediaQueryLists: MediaQueryList = window.matchMedia(mobileQuery);\n        const [isMobile, setIsMobile] = useState<boolean>(window.matchMedia(mobileQuery).matches);\n\n        useEffect(() => {\n            const handler: VoidFunction = () => setIsMobile(mediaQueryLists?.matches);\n            mediaQueryLists?.addEventListener(\"change\", handler);\n            return () => mediaQueryLists?.removeEventListener(\"change\", handler);\n        }, []);\n\n        return isMobile;\n    }\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport \"./close-button.scss\";\n\n/**\n * TODO: This is a component that fixes the broken `.close` element provided by Bootstrap\n * This component should be replaced by the element from Bootstrap when this PR is merged:\n * https://github.com/sebgroup/bootstrap/pull/533\n */\n\nexport const CloseButton: React.FC<JSX.IntrinsicElements[\"button\"]> = React.memo(\n    React.forwardRef((props: JSX.IntrinsicElements[\"button\"], ref: React.ForwardedRef<HTMLButtonElement>) => {\n        return <button ref={ref} {...props} className={classnames(\"rc close-btn\", props.className)} />;\n    })\n);\n","import { randomId } from \"@sebgroup/frontend-tools/randomId\";\nimport classnames from \"classnames\";\nimport React from \"react\";\n\nexport type CustomDropdownItemProps = JSX.IntrinsicElements[\"input\"] & {\n    focused?: boolean;\n    multiple?: boolean;\n};\n\nexport const CustomDropdownItem: React.FC<CustomDropdownItemProps> = ({ focused, multiple, children, ...props }: CustomDropdownItemProps) => {\n    const [id] = React.useState<string>(randomId(\"ddi-\"));\n\n    return (\n        <li className={classnames(\"custom-control\", { \"custom-checkbox\": multiple, focused, selected: props.checked })} role=\"option\" aria-selected={props.checked || null}>\n            <input {...props} type={multiple ? \"checkbox\" : \"radio\"} id={id} className={classnames({ \"custom-control-input\": multiple }) || null} hidden={!multiple} />\n            <label className={classnames({ \"custom-control-label\": multiple, \"custom-radio\": !multiple })} htmlFor={id}>\n                {children}\n            </label>\n        </li>\n    );\n};\n","function _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n} // Older browsers don't support event options, feature detect it.\n// Adopted and modified solution from Bohdan Didukh (2017)\n// https://stackoverflow.com/questions/41594997/ios-10-safari-prevent-scrolling-behind-a-fixed-overlay-and-maintain-scroll-posi\n\n\nvar hasPassiveEvents = false;\n\nif (typeof window !== 'undefined') {\n  var passiveTestOptions = {\n    get passive() {\n      hasPassiveEvents = true;\n      return undefined;\n    }\n\n  };\n  window.addEventListener('testPassive', null, passiveTestOptions);\n  window.removeEventListener('testPassive', null, passiveTestOptions);\n}\n\nvar isIosDevice = typeof window !== 'undefined' && window.navigator && window.navigator.platform && (/iP(ad|hone|od)/.test(window.navigator.platform) || window.navigator.platform === 'MacIntel' && window.navigator.maxTouchPoints > 1);\nvar locks = [];\nvar documentListenerAdded = false;\nvar initialClientY = -1;\nvar previousBodyOverflowSetting = void 0;\nvar previousBodyPosition = void 0;\nvar previousBodyPaddingRight = void 0; // returns true if `el` should be allowed to receive touchmove events.\n\nvar allowTouchMove = function allowTouchMove(el) {\n  return locks.some(function (lock) {\n    if (lock.options.allowTouchMove && lock.options.allowTouchMove(el)) {\n      return true;\n    }\n\n    return false;\n  });\n};\n\nvar preventDefault = function preventDefault(rawEvent) {\n  var e = rawEvent || window.event; // For the case whereby consumers adds a touchmove event listener to document.\n  // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n  // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n  // the touchmove event on document will break.\n\n  if (allowTouchMove(e.target)) {\n    return true;\n  } // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n\n\n  if (e.touches.length > 1) return true;\n  if (e.preventDefault) e.preventDefault();\n  return false;\n};\n\nvar setOverflowHidden = function setOverflowHidden(options) {\n  // If previousBodyPaddingRight is already set, don't set it again.\n  if (previousBodyPaddingRight === undefined) {\n    var _reserveScrollBarGap = !!options && options.reserveScrollBarGap === true;\n\n    var scrollBarGap = window.innerWidth - document.documentElement.clientWidth;\n\n    if (_reserveScrollBarGap && scrollBarGap > 0) {\n      var computedBodyPaddingRight = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right'), 10);\n      previousBodyPaddingRight = document.body.style.paddingRight;\n      document.body.style.paddingRight = computedBodyPaddingRight + scrollBarGap + 'px';\n    }\n  } // If previousBodyOverflowSetting is already set, don't set it again.\n\n\n  if (previousBodyOverflowSetting === undefined) {\n    previousBodyOverflowSetting = document.body.style.overflow;\n    document.body.style.overflow = 'hidden';\n  }\n};\n\nvar restoreOverflowSetting = function restoreOverflowSetting() {\n  if (previousBodyPaddingRight !== undefined) {\n    document.body.style.paddingRight = previousBodyPaddingRight; // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it\n    // can be set again.\n\n    previousBodyPaddingRight = undefined;\n  }\n\n  if (previousBodyOverflowSetting !== undefined) {\n    document.body.style.overflow = previousBodyOverflowSetting; // Restore previousBodyOverflowSetting to undefined\n    // so setOverflowHidden knows it can be set again.\n\n    previousBodyOverflowSetting = undefined;\n  }\n};\n\nvar setPositionFixed = function setPositionFixed() {\n  return window.requestAnimationFrame(function () {\n    // If previousBodyPosition is already set, don't set it again.\n    if (previousBodyPosition === undefined) {\n      previousBodyPosition = {\n        position: document.body.style.position,\n        top: document.body.style.top,\n        left: document.body.style.left\n      }; // Update the dom inside an animation frame \n\n      var _window = window,\n          scrollY = _window.scrollY,\n          scrollX = _window.scrollX,\n          innerHeight = _window.innerHeight;\n      document.body.style.position = 'fixed';\n      document.body.style.top = -scrollY;\n      document.body.style.left = -scrollX;\n      setTimeout(function () {\n        return window.requestAnimationFrame(function () {\n          // Attempt to check if the bottom bar appeared due to the position change\n          var bottomBarHeight = innerHeight - window.innerHeight;\n\n          if (bottomBarHeight && scrollY >= innerHeight) {\n            // Move the content further up so that the bottom bar doesn't hide it\n            document.body.style.top = -(scrollY + bottomBarHeight);\n          }\n        });\n      }, 300);\n    }\n  });\n};\n\nvar restorePositionSetting = function restorePositionSetting() {\n  if (previousBodyPosition !== undefined) {\n    // Convert the position from \"px\" to Int\n    var y = -parseInt(document.body.style.top, 10);\n    var x = -parseInt(document.body.style.left, 10); // Restore styles\n\n    document.body.style.position = previousBodyPosition.position;\n    document.body.style.top = previousBodyPosition.top;\n    document.body.style.left = previousBodyPosition.left; // Restore scroll\n\n    window.scrollTo(x, y);\n    previousBodyPosition = undefined;\n  }\n}; // https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\n\n\nvar isTargetElementTotallyScrolled = function isTargetElementTotallyScrolled(targetElement) {\n  return targetElement ? targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight : false;\n};\n\nvar handleScroll = function handleScroll(event, targetElement) {\n  var clientY = event.targetTouches[0].clientY - initialClientY;\n\n  if (allowTouchMove(event.target)) {\n    return false;\n  }\n\n  if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {\n    // element is at the top of its scroll.\n    return preventDefault(event);\n  }\n\n  if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {\n    // element is at the bottom of its scroll.\n    return preventDefault(event);\n  }\n\n  event.stopPropagation();\n  return true;\n};\n\nexport var disableBodyScroll = function disableBodyScroll(targetElement, options) {\n  // targetElement must be provided\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.');\n    return;\n  } // disableBodyScroll must not have been called on this targetElement before\n\n\n  if (locks.some(function (lock) {\n    return lock.targetElement === targetElement;\n  })) {\n    return;\n  }\n\n  var lock = {\n    targetElement: targetElement,\n    options: options || {}\n  };\n  locks = [].concat(_toConsumableArray(locks), [lock]);\n\n  if (isIosDevice) {\n    setPositionFixed();\n  } else {\n    setOverflowHidden(options);\n  }\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = function (event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        initialClientY = event.targetTouches[0].clientY;\n      }\n    };\n\n    targetElement.ontouchmove = function (event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        handleScroll(event, targetElement);\n      }\n    };\n\n    if (!documentListenerAdded) {\n      document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? {\n        passive: false\n      } : undefined);\n      documentListenerAdded = true;\n    }\n  }\n};\nexport var clearAllBodyScrollLocks = function clearAllBodyScrollLocks() {\n  if (isIosDevice) {\n    // Clear all locks ontouchstart/ontouchmove handlers, and the references.\n    locks.forEach(function (lock) {\n      lock.targetElement.ontouchstart = null;\n      lock.targetElement.ontouchmove = null;\n    });\n\n    if (documentListenerAdded) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? {\n        passive: false\n      } : undefined);\n      documentListenerAdded = false;\n    } // Reset initial clientY.\n\n\n    initialClientY = -1;\n  }\n\n  if (isIosDevice) {\n    restorePositionSetting();\n  } else {\n    restoreOverflowSetting();\n  }\n\n  locks = [];\n};\nexport var enableBodyScroll = function enableBodyScroll(targetElement) {\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.');\n    return;\n  }\n\n  locks = locks.filter(function (lock) {\n    return lock.targetElement !== targetElement;\n  });\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = null;\n    targetElement.ontouchmove = null;\n\n    if (documentListenerAdded && locks.length === 0) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? {\n        passive: false\n      } : undefined);\n      documentListenerAdded = false;\n    }\n  }\n\n  if (isIosDevice) {\n    restorePositionSetting();\n  } else {\n    restoreOverflowSetting();\n  }\n};","import { randomId } from \"@sebgroup/frontend-tools/randomId\";\nimport classnames from \"classnames\";\nimport React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { CloseButton } from \"../CloseButton\";\nimport { FeedbackIndicator, Indicator } from \"../FeedbackIndicator/FeedbackIndicator\";\nimport { Key } from \"../utils/keyboardHelper\";\nimport { CustomDropdownItem } from \"./CustomDropdownItem\";\nimport { disableBodyScroll, enableBodyScroll, clearAllBodyScrollLocks } from \"body-scroll-lock\";\nimport type { BodyScrollOptions } from \"body-scroll-lock\";\n\nconst bodyScrollOptions: BodyScrollOptions = {\n    reserveScrollBarGap: true,\n};\n\nimport \"./dropdown.scss\";\n\nexport interface DropdownText {\n    selectAll?: string;\n    noResult?: string;\n    emptyList?: string;\n    search?: string;\n}\n\nconst defaultText: Required<DropdownText> = {\n    selectAll: \"Select all\",\n    emptyList: \"List is empty\",\n    noResult: \"No result\",\n    search: \"Search...\",\n};\n\nexport function getValueOfMultipleSelect(selectOptions: Array<HTMLOptionElement>): string[] {\n    return Array.from(selectOptions)\n        .filter((option) => option.selected)\n        .map((option) => option.value);\n}\n\n// This solution is meant to fix Gatsby build which complains that document and window doesn't exist in server-side rendering\nconst safeDocument: Document | null = typeof document !== \"undefined\" ? document : null;\nconst safeWindow: Window | null = typeof window !== \"undefined\" ? window : null;\n\nexport type DropdownProps = Omit<JSX.IntrinsicElements[\"select\"], \"value\"> & {\n    /** Props for the select's wrapper (div) */\n    wrapperProps?: JSX.IntrinsicElements[\"div\"];\n    /** The value of the dropdown */\n    value?: string | string[];\n    /** An event triggered when a select of type multiple is changed returning an array of the selected values */\n    onMultipleChange?: (selected: string[]) => void;\n    /** Allows searching throw the dropdown */\n    searchable?: boolean;\n    /** Allows clearing the dropdown with a clear button */\n    clearable?: boolean;\n    /** Allows setting custom label to be displayed for selected item */\n    selectedLabel?: string | ((value: string | string[]) => string | string[]);\n    /** Custom texts to be dispalyed in different parts of the dropdown */\n    text?: DropdownText;\n    /** Indicator for error, warning or success */\n    indicator?: Indicator;\n};\n\nexport const Dropdown: React.FC<DropdownProps> = React.forwardRef(\n    ({ wrapperProps = {}, text = {}, onMultipleChange, searchable, clearable, selectedLabel, indicator, ...props }: DropdownProps, ref) => {\n        const [dropdownId] = React.useState<string>(randomId(\"dd-\"));\n        const [toggleId] = React.useState<string>(randomId(\"ddt-\"));\n        const [selectAllId] = React.useState<string>(randomId(\"sa-\"));\n        const [show, setShow] = React.useState<boolean>(false);\n        const [allSelected, setAllSelected] = React.useState<boolean>(false);\n        const [searchKeyword, setSearchKeyword] = React.useState<string>(\"\");\n        const [menuStyle, setMenuStyle] = React.useState<React.CSSProperties>({});\n        const [label, setLabel] = React.useState<string>();\n        const [selectRef, setSelectRef] = React.useState<HTMLSelectElement>(null);\n        const [selectRefOptions, setSelectRefOptions] = React.useState<Array<HTMLOptionElement>>([]);\n        // focused index should be defaulted to the first valued option (not `select-all` option) if dropdown is not searchable\n        const [focusedIndex, setFocusedIndex] = React.useState<number>(searchable ? -1 : props.multiple ? 1 : 0);\n        const buttonRef = React.useRef<HTMLButtonElement>();\n        const dropdownRef = React.useRef<HTMLDivElement>();\n        const menuRef = React.useRef<HTMLUListElement>();\n        const searchRef = React.useRef<HTMLInputElement>();\n\n        const [prestine, setPrestine] = React.useState<boolean>(true);\n\n        const isMobile: boolean = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(safeWindow?.navigator?.userAgent);\n\n        const handleDropdownMenuOpen = React.useCallback(() => {\n            setShow(true);\n            disableBodyScroll(menuRef.current, bodyScrollOptions);\n        }, [menuRef]);\n\n        const handleDropdownMenuClose = React.useCallback(() => {\n            setShow(false);\n            enableBodyScroll(menuRef.current);\n        }, [menuRef]);\n\n        const changeValue = React.useCallback(\n            (value: string) => {\n                if (props.multiple) {\n                    const current = selectRefOptions.find((option) => option.value === value);\n                    current.selected = !current.selected;\n                } else {\n                    selectRef.value = value;\n                    handleDropdownMenuClose();\n                }\n                selectRef.dispatchEvent(new Event(\"change\", { bubbles: true }));\n                props.multiple && onMultipleChange && onMultipleChange(getValueOfMultipleSelect(selectRefOptions));\n            },\n            [props.multiple, selectRef, selectRefOptions, onMultipleChange, handleDropdownMenuClose]\n        );\n\n        const getOptionsRef = React.useCallback(() => Array.from(menuRef.current?.querySelectorAll<HTMLLIElement>(\".custom-control\") || []), [searchKeyword]);\n\n        const handleChange = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => changeValue(e.target.value), [changeValue]);\n\n        const selectAll = React.useCallback(\n            (forceValue?: boolean | React.ChangeEvent<HTMLInputElement>) => {\n                selectRefOptions.forEach((option: HTMLOptionElement) => {\n                    if (!option.disabled) {\n                        option.selected = typeof forceValue === \"boolean\" ? forceValue : !allSelected;\n                    } else {\n                        option.selected = false;\n                    }\n                });\n                typeof forceValue === \"boolean\" && (selectRef.value = \"\");\n                selectRef.dispatchEvent(new Event(\"change\", { bubbles: true }));\n                props.multiple && onMultipleChange && onMultipleChange(getValueOfMultipleSelect(selectRefOptions));\n            },\n            [allSelected, props.multiple, selectRefOptions, selectRef]\n        );\n\n        const isAllSelected = React.useCallback((): boolean => {\n            return selectRefOptions.every((option: HTMLOptionElement) => {\n                return option.disabled ? true : option.selected;\n            });\n        }, [selectRefOptions]);\n\n        const toggleMenu = React.useCallback(\n            (event: React.MouseEvent<HTMLButtonElement>) => {\n                if (show) {\n                    handleDropdownMenuClose();\n                } else {\n                    const rect = event.currentTarget.getBoundingClientRect();\n                    const top: number = rect.top + rect.height;\n                    const left: number = rect.left;\n                    const bottom: number = window.innerHeight - rect.y + 4;\n                    const minWidth: number = rect.width;\n                    if (window.innerHeight - top < 200) {\n                        setMenuStyle({ minWidth, bottom, left, maxHeight: rect.y - 10 });\n                    } else {\n                        setMenuStyle({ minWidth, top, left, maxHeight: window.innerHeight - top - 12 });\n                    }\n                    handleDropdownMenuOpen();\n                }\n                prestine && setPrestine(false);\n            },\n            [show, prestine, handleDropdownMenuOpen, handleDropdownMenuClose]\n        );\n\n        const toggleOption = React.useCallback(\n            (e: React.KeyboardEvent) => {\n                const optionRef: HTMLLIElement = getOptionsRef()[focusedIndex];\n\n                if (optionRef) {\n                    e.preventDefault();\n                    optionRef.classList.contains(\"select-all\") ? selectAll() : changeValue(optionRef.querySelector(\"input\")?.value);\n                }\n            },\n            [focusedIndex, changeValue, getOptionsRef, selectAll]\n        );\n\n        const onChange = React.useCallback(\n            (event: React.ChangeEvent<HTMLSelectElement>) => {\n                props.multiple && onMultipleChange && onMultipleChange(getValueOfMultipleSelect(Array.from(event.target.options)));\n                props.onChange && props.onChange(event);\n            },\n            [props.multiple, props.onChange, onMultipleChange]\n        );\n\n        const onDropDownKeyDown = React.useCallback(\n            (e: React.KeyboardEvent) => {\n                const optionsRef: Array<HTMLLIElement> = getOptionsRef();\n\n                switch (e.key) {\n                    case Key.Escape:\n                        handleDropdownMenuClose();\n                        break;\n                    case Key.ArrowDown:\n                    case Key.ArrowUp:\n                        e.preventDefault();\n                        const direction: number = e.key === Key.ArrowDown ? 1 : -1;\n                        setFocusedIndex((focusedIndex) => (focusedIndex + direction + optionsRef.length) % optionsRef.length);\n                        break;\n                    case Key.Home:\n                        setFocusedIndex(0);\n                        break;\n                    case Key.End:\n                        setFocusedIndex(optionsRef.length - 1);\n                        break;\n                    case Key.Enter:\n                        toggleOption(e);\n                        !props.multiple && handleDropdownMenuClose();\n                        break;\n                    case Key.Space:\n                        !searchable && toggleOption(e);\n                        !props.multiple && handleDropdownMenuClose();\n                        break;\n                    case Key.Tab:\n                        e.preventDefault();\n                        handleDropdownMenuClose();\n                        break;\n                    default:\n                        if (!searchable) {\n                            // TODO: printable characters keyboard support @see https://www.w3.org/TR/wai-aria-practices/examples/listbox/listbox-collapsible.html\n                        }\n                        break;\n                }\n            },\n            [props.multiple, searchable, getOptionsRef, toggleOption, handleDropdownMenuClose]\n        );\n\n        const onSearchInputKeyDown = React.useCallback(\n            (e: React.KeyboardEvent) => {\n                switch (e.key) {\n                    case Key.Escape:\n                        e.stopPropagation();\n                        setSearchKeyword(\"\");\n                        handleDropdownMenuClose();\n                        break;\n                    case Key.Space:\n                        e.stopPropagation();\n                        break;\n                }\n            },\n            [handleDropdownMenuClose]\n        );\n\n        /** TODO: Can be extracted to a component */\n        const getOptions = () => {\n            /**\n             * running index should exclude the `select-all` option as it is not part of this function scope,\n             * hence the initial value for it should be determine if the `select-all` option is visible on screen.\n             *\n             * `select-all` option is only visible when search keyword is empty or multiple flag is true\n             */\n            let runningIndex: number = searchKeyword.length > 0 || !props.multiple ? 0 : 1;\n            const list = React.Children.map(props.children, (Child) => {\n                if (!React.isValidElement(Child)) {\n                    return Child;\n                } else {\n                    const type: string = (Child.type as any)?.name || Child.type;\n                    const filteredBySearch = (element: React.ReactElement<any>): boolean => {\n                        if (searchKeyword) {\n                            if (React.isValidElement<any>(element)) {\n                                const keyword: string = searchKeyword.toLowerCase().trim();\n                                const text: string = String(element.props?.children).toLowerCase().trim();\n                                return text.indexOf(keyword) < 0;\n                            } else {\n                                return true;\n                            }\n                        }\n                        return false;\n                    };\n                    /** Radio buttons should be grouped with a name */\n                    const name: string = props.multiple ? null : toggleId;\n                    switch (type) {\n                        case \"option\":\n                            return filteredBySearch(Child) ? null : (\n                                <CustomDropdownItem\n                                    {...Child.props}\n                                    multiple={props.multiple}\n                                    name={name}\n                                    value={Child.props.value}\n                                    checked={Array.isArray(props.value) ? props.value.includes(Child.props.value) : props.value == Child.props.value}\n                                    focused={focusedIndex === runningIndex++}\n                                    onChange={handleChange}\n                                >\n                                    {Child.props.children}\n                                </CustomDropdownItem>\n                            );\n                        case \"optgroup\":\n                            const label = <label className=\"optgroup-label\">{Child.props?.label}</label>;\n                            return [\n                                searchKeyword ? null : label,\n                                ...React.Children.toArray(Child.props.children).map((groupChild: React.ReactElement<any>) => {\n                                    return filteredBySearch(groupChild) ? null : (\n                                        <CustomDropdownItem\n                                            {...groupChild.props}\n                                            multiple={props.multiple}\n                                            name={name}\n                                            value={groupChild.props.value}\n                                            checked={Array.isArray(props.value) ? props.value.includes(groupChild.props.value) : props.value == groupChild.props.value}\n                                            focused={focusedIndex === runningIndex++}\n                                            onChange={handleChange}\n                                        >\n                                            {groupChild.props.children}\n                                        </CustomDropdownItem>\n                                    );\n                                }),\n                            ];\n                        default:\n                            return searchKeyword ? null : Child;\n                    }\n                }\n            });\n            return list?.length ? list : searchKeyword ? <p>{text.noResult || defaultText.noResult}</p> : <p>{text.emptyList || defaultText.emptyList}</p>;\n        };\n\n        const measuredSelectRef = React.useCallback((node: HTMLSelectElement) => {\n            if (typeof ref === \"function\") {\n                // to pass ref back to parents\n                ref(node);\n            } else if (!!ref) {\n                (ref as any).current = node;\n            }\n            if (node !== null) {\n                setSelectRef(node);\n            }\n        }, []);\n\n        React.useEffect(() => {\n            !isMobile && props.multiple && setAllSelected(isAllSelected());\n        }, [props.value, props.multiple, isAllSelected]);\n\n        React.useEffect(() => {\n            !searchable && setSearchKeyword(\"\");\n        }, [searchable]);\n\n        React.useEffect(() => {\n            if (!!selectRef) {\n                setSelectRefOptions(Array.from(selectRef.options));\n            }\n        }, [selectRef]);\n\n        React.useEffect(() => {\n            if (!isMobile) {\n                const detectBlur = (event: MouseEvent) => {\n                    if (!dropdownRef.current.contains(event.target as any) && !menuRef.current.contains(event.target as any)) {\n                        handleDropdownMenuClose();\n                    }\n                };\n\n                const handleScroll = (event: WheelEvent): void => {\n                    if (!menuRef.current.contains(event.target as any)) {\n                        handleDropdownMenuClose();\n                    }\n                };\n\n                if (show) {\n                    (searchable ? searchRef : menuRef).current?.focus();\n                    const selectedOption = menuRef.current?.querySelector<HTMLLIElement>(\".custom-control.selected\");\n                    selectedOption && setFocusedIndex(getOptionsRef().indexOf(selectedOption));\n                    document.addEventListener(\"click\", detectBlur);\n                    window.addEventListener(\"wheel\", handleScroll);\n                } else {\n                    !prestine && buttonRef.current?.focus();\n                    document.removeEventListener(\"click\", detectBlur);\n                    window.removeEventListener(\"wheel\", handleScroll);\n                }\n\n                return () => {\n                    document.removeEventListener(\"click\", detectBlur);\n                    window.removeEventListener(\"wheel\", handleScroll);\n                };\n            }\n        }, [show, prestine, handleDropdownMenuClose]);\n\n        React.useEffect(() => {\n            if (selectedLabel && typeof selectedLabel === \"string\") {\n                !isMobile && setLabel(selectedLabel || props.placeholder);\n            } else if (selectedLabel && typeof selectedLabel === \"function\") {\n                const newLabel: string | string[] = selectedLabel(props.value);\n                !isMobile && setLabel((Array.isArray(newLabel) ? newLabel.join(\", \") : newLabel) || props.placeholder);\n            } else {\n                !isMobile && setLabel((Array.isArray(props.value) ? props.value.join(\", \") : props.value) || props.placeholder);\n            }\n        }, [props.value, props.placeholder, selectedLabel]);\n\n        React.useEffect(() => {\n            // scroll the focused item into view\n            getOptionsRef()?.[focusedIndex]?.scrollIntoView?.(false);\n        }, [focusedIndex, getOptionsRef]);\n\n        React.useEffect(() => {\n            return () => {\n                clearAllBodyScrollLocks();\n            };\n        }, []);\n\n        return (\n            <div {...wrapperProps} className={classnames(\"rc custom-dropdown\", wrapperProps.className)}>\n                {!isMobile && (\n                    <div className={classnames(\"dropdown\", { show, clearable })} ref={dropdownRef}>\n                        <FeedbackIndicator type={indicator?.type} message={null}>\n                            <button\n                                ref={buttonRef}\n                                className=\"btn btn-secondary dropdown-toggle\"\n                                type=\"button\"\n                                id={toggleId}\n                                data-toggle=\"dropdown\"\n                                aria-expanded={show || null}\n                                aria-haspopup=\"listbox\"\n                                aria-labelledby={`${props[\"aria-labelledby\"] ? `${props[\"aria-labelledby\"]} ` : \"\"}${toggleId}`}\n                                onClick={toggleMenu}\n                                disabled={props.disabled}\n                            >\n                                <span>{label}</span>\n                            </button>\n                        </FeedbackIndicator>\n                        {clearable && <CloseButton onClick={() => selectAll(false)} disabled={props.disabled} />}\n                        {!safeDocument\n                            ? null\n                            : createPortal(\n                                  <ul\n                                      ref={menuRef}\n                                      className={classnames(\"rc dropdown-menu\", { show })}\n                                      role=\"listbox\"\n                                      aria-labelledby={props[\"aria-labelledby\"]}\n                                      aria-activedescendant={show ? getOptionsRef()[focusedIndex]?.querySelector<HTMLInputElement>(\"input\").id : null}\n                                      style={{ ...menuStyle }}\n                                      tabIndex={-1}\n                                      onKeyDown={onDropDownKeyDown}\n                                  >\n                                      {searchable && (\n                                          <input\n                                              ref={searchRef}\n                                              type=\"text\"\n                                              className=\"form-control\"\n                                              role=\"combobox\"\n                                              aria-activedescendant={show ? getOptionsRef()[focusedIndex]?.querySelector<HTMLInputElement>(\"input\").id : null}\n                                              aria-autocomplete=\"list\"\n                                              aria-expanded={show}\n                                              aria-haspopup=\"true\"\n                                              aria-owns={dropdownId}\n                                              placeholder={text.search || defaultText.search}\n                                              value={searchKeyword}\n                                              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSearchKeyword(e.target.value)}\n                                              onKeyDown={onSearchInputKeyDown}\n                                          />\n                                      )}\n                                      {/* Select all button */}\n                                      {props.multiple && !searchKeyword ? (\n                                          React.Children.count(props.children) ? (\n                                              <>\n                                                  <li className={classnames(\"custom-control custom-checkbox select-all\", { focused: focusedIndex === 0 })}>\n                                                      <input id={selectAllId} name=\"inline\" type=\"checkbox\" className=\"custom-control-input\" checked={allSelected} hidden onChange={selectAll} />\n                                                      <label className=\"custom-control-label\" htmlFor={selectAllId}>\n                                                          {text.selectAll || defaultText.selectAll}\n                                                      </label>\n                                                  </li>\n                                                  <div className=\"dropdown-divider\" />\n                                              </>\n                                          ) : (\n                                              text.emptyList || defaultText.emptyList\n                                          )\n                                      ) : null}\n\n                                      {getOptions()}\n                                  </ul>,\n                                  safeDocument.body\n                              )}\n                    </div>\n                )}\n                <FeedbackIndicator type={indicator?.type} message={indicator?.message}>\n                    <select {...props} ref={measuredSelectRef} onChange={onChange} className={classnames(\"custom-select\", props.className)} hidden={!isMobile}>\n                        {/* select always picks the first item by default. Therefore the first needs to be initialized here */}\n                        {!props.value && (\n                            <option disabled value=\"\" hidden>\n                                {props.placeholder}\n                            </option>\n                        )}\n                        {React.Children.toArray(props.children).filter((Child: any) => [\"option\", \"optgroup\"].includes(Child.type))}\n                    </select>\n                </FeedbackIndicator>\n\n                {clearable && isMobile && <CloseButton onClick={() => selectAll(false)} disabled={props.disabled} />}\n            </div>\n        );\n    }\n);\n","import classnames from \"classnames\";\nimport React from \"react\";\nimport \"./feedback-indicator.scss\";\n\nexport type IndicatorType = \"danger\" | \"warning\" | \"success\" | \"none\";\nexport type Indicator = FeedbackIndicatorProps;\n\ntype FeedbackIndicatorProps = React.PropsWithChildren<{\n    /** The type of the indicator. Available values: \"danger\" | \"warning\" | \"success\" */\n    type: IndicatorType;\n    /** The indicator message. `children` can also be used instead. */\n    message?: React.ReactNode;\n    /** Disable feedback indicator border */\n    noBorder?: boolean;\n    /** The feedback indicator identifier. */\n    id?: string;\n}>;\n/** A helper component to display feedback for children content */\nexport const FeedbackIndicator: React.FC<FeedbackIndicatorProps> = (props: FeedbackIndicatorProps) => {\n    const [indicatorValue, setIndicatorValue] = React.useState<number>(0);\n\n    React.useEffect(() => {\n        switch (props.type) {\n            case \"danger\":\n                setIndicatorValue(10);\n                break;\n            case \"warning\":\n                setIndicatorValue(50);\n                break;\n            case \"success\":\n                setIndicatorValue(100);\n                break;\n            default:\n                setIndicatorValue(0);\n        }\n    }, [props.type]);\n\n    function wrap(children: any) {\n        const Child: any = React.Children.toArray(children)[0];\n\n        return React.isValidElement(Child) ? (\n            <>\n                {React.cloneElement<any>(Child as any, {\n                    className: classnames((Child.props as any).className, `rc-d feedback feedback-${indicatorValue}`, { \"no-border\": props.noBorder }, { \"mb-0\": props.message }),\n                })}\n                {props.type && (\n                    <p className={classnames(\"rc-d feedback-message\")} role=\"alert\" id={props.id}>\n                        {props.message}\n                    </p>\n                )}\n            </>\n        ) : (\n            Child\n        );\n    }\n\n    const count: number = React.Children.count(props.children);\n\n    return count ? (props.type ? wrap(count > 1 ? <div>{props.children}</div> : props.children) : props.children) : null;\n};\n","import React from \"react\";\nimport { randomId } from \"@sebgroup/frontend-tools/randomId\";\nimport classnames from \"classnames\";\nimport { FeedbackIndicator, Indicator } from \"../FeedbackIndicator\";\nimport \"./textbox.scss\";\n\nexport type TextboxProps = JSX.IntrinsicElements[\"input\"] & {\n    /** Element label */\n    label?: string;\n    /** Element prefix slot */\n    leftSlot?: React.ReactNode;\n    /** Element prefix title */\n    leftSlotTitle?: string;\n    /** Callback when prefix button is clicked */\n    onLeftClick?: (event: React.MouseEvent<HTMLDivElement>) => void;\n    /** Callback when suffix button is clicked */\n    onRightClick?: (event: React.MouseEvent<HTMLDivElement>) => void;\n    /** Component associates with input ref */\n    reference?: React.RefObject<HTMLInputElement>;\n    /** Element suffix slot */\n    rightSlot?: React.ReactNode;\n    /** Element suffix title */\n    rightSlotTitle?: string;\n    /** Feedback indicator object */\n    indicator?: Indicator;\n    /** Wrapper props */\n    wrapperProps?: JSX.IntrinsicElements[\"div\"];\n};\n/** Textbox is a component that allows user to add or edit text with extra text or icon port */\nexport const Textbox: React.FC<TextboxProps> = React.forwardRef(\n    ({ leftSlot, leftSlotTitle, onLeftClick, rightSlot, rightSlotTitle, onRightClick, indicator, wrapperProps = {}, ...props }: TextboxProps, ref: React.ForwardedRef<HTMLInputElement>) => {\n        const [customId, setCustomId] = React.useState<string>(null);\n        const labelId: string = randomId(\"tbgl-\");\n\n        React.useEffect(() => setCustomId(props.id ? props.id : props.label ? randomId(\"tbg-\") : null), [props.id]);\n\n        return (\n            <div {...wrapperProps} className={classnames(\"rc input-box-group\", wrapperProps.className)}>\n                {props.label && (\n                    <label id={labelId} className=\"custom-label\" htmlFor={customId}>\n                        {props.label}\n                    </label>\n                )}\n                <div className={classnames(\"rc input-group\", { disabled: props.disabled })}>\n                    <FeedbackIndicator {...indicator}>\n                        <div className=\"input-box-group-wrapper\">\n                            {leftSlot && (\n                                <div\n                                    className={classnames(\"input-group-prepend\", { clickable: onLeftClick })}\n                                    role={onLeftClick ? \"button\" : null}\n                                    onClick={onLeftClick}\n                                    tabIndex={onLeftClick ? 0 : null}\n                                    aria-hidden={onLeftClick ? null : \"true\"}\n                                    aria-describedby={leftSlotTitle ? null : labelId}\n                                >\n                                    <span className=\"input-group-text\" title={leftSlotTitle}>\n                                        {leftSlot}\n                                    </span>\n                                </div>\n                            )}\n                            <input {...props} ref={ref} id={customId} className={classnames(\"form-control\", props.className)} />\n                            {rightSlot && (\n                                <div\n                                    className={classnames(\"input-group-append\", { clickable: onRightClick })}\n                                    onClick={onRightClick}\n                                    role={onRightClick ? \"button\" : null}\n                                    tabIndex={onRightClick ? 0 : null}\n                                    aria-hidden={onRightClick ? null : \"true\"}\n                                    aria-describedby={rightSlotTitle ? null : labelId}\n                                >\n                                    <span className=\"input-group-text\" title={rightSlotTitle}>\n                                        {rightSlot}\n                                    </span>\n                                </div>\n                            )}\n                        </div>\n                    </FeedbackIndicator>\n                </div>\n            </div>\n        );\n    }\n);\n","export enum Key {\n    ArrowDown = \"ArrowDown\",\n    ArrowUp = \"ArrowUp\",\n    ArrowLeft = \"ArrowLeft\",\n    ArrowRight = \"ArrowRight\",\n    Escape = \"Escape\",\n    End = \"End\",\n    Enter = \"Enter\",\n    Home = \"Home\",\n    PageDown = \"PageDown\",\n    PageUp = \"PageUp\",\n    Space = \" \",\n    Tab = \"Tab\",\n    Delete = \"Delete\",\n}\n\n/**\n * Detect if a modifier key is pressed along with the current key event.\n *\n * @param {object} event - Keyboard event\n * @returns true if key pressed is combined with modifier key, false otherwise\n */\nexport function hasModifierKey({ altKey, ctrlKey, metaKey, shiftKey }: React.KeyboardEvent) {\n    return altKey || ctrlKey || metaKey || shiftKey;\n}\n","var React = require('react');\n\nfunction ExternalLink (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"fillRule\":\"evenodd\",\"d\":\"M1.5 13A1.5 1.5 0 0 0 3 14.5h8a1.5 1.5 0 0 0 1.5-1.5V9a.5.5 0 0 0-1 0v4a.5.5 0 0 1-.5.5H3a.5.5 0 0 1-.5-.5V5a.5.5 0 0 1 .5-.5h4a.5.5 0 0 0 0-1H3A1.5 1.5 0 0 0 1.5 5v8zm7-11a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 .5.5v5a.5.5 0 0 1-1 0V2.5H9a.5.5 0 0 1-.5-.5z\",\"key\":0}),React.createElement(\"path\",{\"fillRule\":\"evenodd\",\"d\":\"M14.354 1.646a.5.5 0 0 1 0 .708l-8 8a.5.5 0 0 1-.708-.708l8-8a.5.5 0 0 1 .708 0z\",\"key\":1})]);\n}\n\nExternalLink.defaultProps = {\"width\":\"1em\",\"height\":\"1em\",\"fill\":\"currentColor\",\"viewBox\":\"0 0 16 16\"};\n\nmodule.exports = ExternalLink;\n\nExternalLink.default = ExternalLink;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["randomId","exports","Object","defineProperty","value","seed","String","Math","random","Date","getTime","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","prototype","key","call","join","module","Footer","React","className","href","target","rel","title","src","alt","versions","require","props","currentVersion","setCurrentVersion","formattedList","setFormattedList","currentpath","window","location","regex","RegExp","matchedVersions","match","name","map","item","label","replace","wrapperProps","classnames","selectedLabel","find","onChange","e","origin","withPrefix","index","pkg","urls","releases","github","contribute","issues","v4","imageUrl","homepage","siteName","metaConfigs","keywords","siteUrl","description","sitePreviewImageUrl","jsonLD","url","image","screenshot","applicationCategory","operatingSystem","author","logo","useIsMobile","mobileQuery","mediaQueryLists","matchMedia","useState","matches","isMobile","setIsMobile","useEffect","handler","addEventListener","removeEventListener","CloseButton","ref","CustomDropdownItem","focused","multiple","children","id","selected","checked","role","type","hidden","htmlFor","hasPassiveEvents","passiveTestOptions","isIosDevice","navigator","platform","test","maxTouchPoints","locks","documentListenerAdded","initialClientY","previousBodyOverflowSetting","previousBodyPosition","previousBodyPaddingRight","allowTouchMove","el","some","lock","options","preventDefault","rawEvent","event","touches","restoreOverflowSetting","undefined","document","body","style","paddingRight","overflow","restorePositionSetting","y","parseInt","top","x","left","position","scrollTo","disableBodyScroll","targetElement","concat","arr","arr2","from","_toConsumableArray","requestAnimationFrame","_window","scrollY","scrollX","innerHeight","setTimeout","bottomBarHeight","_reserveScrollBarGap","reserveScrollBarGap","scrollBarGap","innerWidth","documentElement","clientWidth","computedBodyPaddingRight","getComputedStyle","getPropertyValue","setOverflowHidden","ontouchstart","targetTouches","clientY","ontouchmove","scrollTop","scrollHeight","clientHeight","isTargetElementTotallyScrolled","stopPropagation","handleScroll","passive","console","error","bodyScrollOptions","defaultText","getValueOfMultipleSelect","selectOptions","filter","option","safeDocument","safeWindow","Dropdown","runningIndex","list","text","onMultipleChange","searchable","clearable","indicator","dropdownId","toggleId","selectAllId","show","setShow","allSelected","setAllSelected","searchKeyword","setSearchKeyword","menuStyle","setMenuStyle","setLabel","selectRef","setSelectRef","selectRefOptions","setSelectRefOptions","focusedIndex","setFocusedIndex","buttonRef","dropdownRef","menuRef","searchRef","prestine","setPrestine","userAgent","handleDropdownMenuOpen","current","handleDropdownMenuClose","changeValue","dispatchEvent","Event","bubbles","getOptionsRef","querySelectorAll","handleChange","selectAll","forceValue","forEach","disabled","isAllSelected","every","toggleMenu","rect","currentTarget","getBoundingClientRect","height","bottom","minWidth","width","maxHeight","toggleOption","optionRef","classList","contains","querySelector","onDropDownKeyDown","optionsRef","Key","direction","onSearchInputKeyDown","measuredSelectRef","node","detectBlur","focus","selectedOption","indexOf","placeholder","newLabel","scrollIntoView","FeedbackIndicator","message","onClick","createPortal","tabIndex","onKeyDown","search","emptyList","Child","filteredBySearch","element","keyword","toLowerCase","trim","includes","groupChild","noResult","indicatorValue","setIndicatorValue","count","noBorder","Textbox","leftSlot","leftSlotTitle","onLeftClick","rightSlot","rightSlotTitle","onRightClick","customId","setCustomId","labelId","clickable","ExternalLink","createElement","defaultProps","default","_objectWithoutPropertiesLoose","source","excluded","sourceKeys","keys"],"sourceRoot":""}